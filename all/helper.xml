<project name="Helper targets" default="noDefault">
	<property name="postingDirectory" value="${buildDirectory}" />
	<!-- ===================================================================== -->
	<!-- Set of helper targets for building the Eclipse SDK -->
	<!-- ===================================================================== -->
	<target name="discoverOS">
		<condition property="onUnix">
			<and>
				<os family="unix" />
			</and>
		</condition>
		<condition property="onWindows">
			<and>
				<os family="windows" />
			</and>
		</condition>
	</target>

	<target name="printWarnings" if="onWindows" depends="discoverOS">
		<echo message="The UNIX versions of your build output will be invalid.  Windows will not preserve symbolic links and permissions on executable files." />
	</target>

	<target name="setLabels">
		<!--required-->
		<!-- setup the label.properties file packaged in the source builds. -->
		<!--Set this property to empty string-->
		<property name="buildType" value="" />
		<tstamp>
			<format property="TODAY" pattern="MMMM d, yyyy" />
			<format property="TSTAMP" pattern="HHmm" />
		</tstamp>
		<copy file="label.properties.template" tofile="${buildDirectory}/label.properties" overwrite="true" />
		<replace file="${buildDirectory}/label.properties" token="@builddate@" value="${TODAY}" />
		<replace file="${buildDirectory}/label.properties" token="@buildtype@" value="${buildType}" />
		<replace file="${buildDirectory}/label.properties" token="@ds@" value="${timestamp}" />
		<replace file="${buildDirectory}/label.properties" token="@buildid@" value="${buildId}" />
	</target>


	<target name="buildStandAloneSWT">
		<antcall target="packageSwtStandalone">
			<param name="ws" value="win32" />
			<param name="os" value="win32" />
			<param name="arch" value="x86" />
		</antcall>
		<antcall target="packageSwtStandalone">
			<param name="os" value="linux" />
			<param name="ws" value="motif" />
			<param name="arch" value="x86" />
		</antcall>
		<antcall target="packageSwtStandalone">
			<param name="os" value="aix" />
			<param name="ws" value="motif" />
			<param name="arch" value="ppc" />
		</antcall>
		<antcall target="packageSwtStandalone">
			<param name="os" value="hpux" />
			<param name="ws" value="motif" />
			<param name="arch" value="PA_RISC" />
		</antcall>
		<antcall target="packageSwtStandalone">
			<param name="os" value="solaris" />
			<param name="ws" value="motif" />
			<param name="arch" value="sparc" />
		</antcall>
		<antcall target="packageSwtStandalone">
			<param name="os" value="solaris" />
			<param name="ws" value="gtk" />
			<param name="arch" value="sparc" />
		</antcall>
		<antcall target="packageSwtStandalone">
			<param name="os" value="qnx" />
			<param name="ws" value="photon" />
			<param name="arch" value="x86" />
		</antcall>
		<antcall target="packageSwtStandalone">
			<param name="os" value="linux" />
			<param name="ws" value="gtk" />
			<param name="arch" value="x86" />
		</antcall>
		<antcall target="packageSwtStandalone">
			<param name="os" value="macosx" />
			<param name="ws" value="carbon" />
			<param name="arch" value="ppc" />
		</antcall>
		<antcall target="packageSwtStandalone">
			<param name="os" value="linux" />
			<param name="ws" value="gtk" />
			<param name="arch" value="x86_64" />
		</antcall>
		<antcall target="packageSwtStandalone">
			<param name="os" value="linux" />
			<param name="ws" value="gtk" />
			<param name="arch" value="ppc" />
		</antcall>
		<antcall target="packageSwtStandalone">
			<param name="ws" value="win32" />
			<param name="os" value="wce_ppc" />
			<param name="arch" value="arm" />
			<param name="skipChecksum" value="true" />
		</antcall>
		<antcall target="generateChecksum">
			<param name="downloadFile" value="swt-${buildId}-win32-wce_ppc-arm-j2se.zip" />
			<param name="archiveFullPath" value="${postingDirectory}/${buildLabel}/swt-${buildId}-win32-wce_ppc-arm-j2se.zip" />
		</antcall>
		<antcall target="generateChecksum">
			<param name="downloadFile" value="swt-${buildId}-win32-wce_ppc-arm-j2me.zip" />
			<param name="archiveFullPath" value="${postingDirectory}/${buildLabel}/swt-${buildId}-win32-wce_ppc-arm-j2me.zip" />
		</antcall>

	</target>

	<target name="packageSwtStandalone">
		<property name="downloadFile" value="swt-${buildid}-${ws}-${os}-${arch}.zip" />
		<property name="destination" value="${postingDirectory}/${buildLabel}" />
		<property name="archiveFullPath" value="${destination}/${downloadFile}" />

		<ant antfile="build.xml" target="swtdownload" dir="${buildDirectory}/plugins/org.eclipse.swt.${ws}.${os}.${arch}">
		</ant>
		<antcall target="generateChecksum" />
	</target>

	<target name="generateChecksum" unless="skipChecksum">
		<checksum file="${archiveFullPath}" property="md5" />
		<echo message="${md5} *${downloadFile}" file="${postingDirectory}/${buildLabel}/checksum/${downloadFile}.md5" />
	</target>

	<target name="publish" description="Preparing to post the build...">
		<!--post clickThroughs-->
		<copy todir="${postingDirectory}/${buildLabel}">
			<fileset dir="${buildDirectory}/maps/org.eclipse.releng" includes="clickThroughs/" />
		</copy>

		<!--post directory.txt-->
		<copy file="${buildDirectory}/directory.txt" todir="${postingDirectory}/${buildLabel}" />

		<!--post instructions on automated testing-->
		<copy file="${eclipse.build.scripts}/sdk.tests/testScripts/readme.html" tofile="${postingDirectory}/${buildLabel}/automatedtesting.html" />
		<copy file="${buildDirectory}/plugins/org.eclipse.test/testframework.html" tofile="${postingDirectory}/${buildLabel}/testframework.html" />

		<antcall target="generateEclipseIndex" />
		<!--get static files required in the buildLabel directory-->
		<copy todir="${postingDirectory}/${buildLabel}">
			<fileset dir="${builder}/publishing/staticDropFiles" />
		</copy>

		<!--copy buildnotes from plugin directories-->
		<mkdir dir="${postingDirectory}/${buildLabel}/buildnotes" />
		<copy todir="${postingDirectory}/${buildLabel}/buildnotes" flatten="true">
			<fileset dir="${buildDirectory}/plugins" includes="**/buildnotes_*.html,**/jdt_core_style.css" />
		</copy>
	</target>


	<!-- ===================================================================== -->
	<!-- Target used to test the build                                         -->
	<!-- ===================================================================== -->
	<target name="testAll">
		<antcall target="configure.team.cvs.test"/>
		<waitfor maxwait="300" maxwaitunit="minute" checkevery="1" checkeveryunit="minute">
			<available file="${postingDirectory}/${buildLabel}/checksum/eclipse-Automated-Tests-${buildId}.zip.md5" />
		</waitfor>
		<parallel>
			<antcall target="test-JUnit" />
			<antcall target="test-performance" />
		</parallel>
	</target>

	<target name="test-JUnit">
		<echo message="Starting tests." />
		<property name="dropLocation" value="${postingDirectory}" />
		<ant antfile="testAll.xml" dir="${eclipse.build.scripts}/sdk.tests/testConfigs" />

		<antcall target="generateEclipseIndex" />

		<!--copy the test results and new index page to the posting location-->
		<copy todir="${postingDirectory}/${buildLabel}" overwrite="true">
			<fileset dir="${buildDirectory}/${buildLabel}" includes="testresults/**,*.php" />
		</copy>
		<replace file="${postingDirectory}/${buildLabel}/testResults.php" token="@build@" value="${buildId}" />

	</target>

	<!-- ===================================================================== -->
	<!-- Target used to test the build                                         -->
	<!-- ===================================================================== -->
	<target name="test-performance" unless="skip.performance.tests">
		<echo message="Starting performance tests." />
		<property name="dropLocation" value="${postingDirectory}" />
		<ant antfile="testAll.xml" dir="${eclipse.build.scripts}/sdk.tests/testConfigs" target="performanceTests" />
		<antcall target="generatePerformanceResults" />
	</target>

	<!-- ===================================================================== -->
	<!-- Target used to test the build for internal references                 -->
	<!-- ===================================================================== -->
	<target name="test-internalReferences">
		<property name="apiscanner" value="${eclipse.build.scripts}/sdk/tools/apiscanner" />
		<property name="workingDir" value="${buildDirectory}/internalReference" />
		<mkdir dir="${workingDir}" />
		<waitfor maxwait="300" maxwaitunit="minute" checkevery="1" checkeveryunit="minute">
			<available file="${postingDirectory}/${buildLabel}/checksum/eclipse-SDK-${buildId}-win32.zip.md5" />
		</waitfor>
		<unzip src="${postingDirectory}/${buildLabel}/eclipse-SDK-${buildId}-win32.zip" dest="${workingDir}" />

		<java classname="org.eclipse.wtp.releng.tools.component.violation.ComponentViolationEmitter" fork="true" dir="${apiscanner}">
			<arg line="
         	-eclipseDir ${workingDir}/eclipse
         	-compXMLDir ${buildDirectory}/plugins
         	-compRefDir component-ref
         	-compVioDir ${postingDirectory}/${buildLabel}/internalReference
         	-xsl xsl/component-violation.xsl
         	-summaryXSL xsl/component-violation-summary.xsl" />
			<classpath>
				<fileset dir="${apiscanner}/lib" />
			</classpath>
		</java>
	</target>

	<!-- ===================================================================== -->
	<!-- Helper targets                                                        -->
	<!-- ===================================================================== -->
	<target name="mail" unless="noMail">
		<!-- helper target for sending email messages related to build. -->
		<mail mailhost="${host}" from="${sender}" tolist="${recipients}" subject="[eclipse-build] ${buildId}: ${subject}" message="${message}" failonerror="false" />
	</target>

	<target name="configure.team.cvs.test" unless="test.xml.tmp">
		<copy file="${eclipse.build.scripts}/sdk.tests/testScripts/test.xml" tofile="${eclipse.build.scripts}/sdk.tests/testScripts/test.xml.tmp" />
		<replace file="${eclipse.build.scripts}/sdk.tests/testScripts/test.xml" token="@cvs_user@" value="${cvs_user}" />
		<replace file="${eclipse.build.scripts}/sdk.tests/testScripts/test.xml" token="@cvs_password@" value="${cvs_password}" />
		<replace file="${eclipse.build.scripts}/sdk.tests/testScripts/test.xml" token="@cvs_host@" value="${cvs_host}" />
		<replace file="${eclipse.build.scripts}/sdk.tests/testScripts/test.xml" token="@cvs_root@" value="${cvs_root}" />
		<delete file="${eclipse.build.scripts}/sdk.tests/testScripts/test.xml.tmp" />
	</target>

	<target name="generateEclipseIndex">
		<available classname="org.eclipse.releng.generators.EclipseTestResultsGenerator" property="class" value="org.eclipse.releng.generators.EclipseTestResultsGenerator" />

		<!--regenerate the index page with links to test results-->
		<ant antfile="${base.builder}/plugins/org.eclipse.build.tools/scripts/publish.xml" dir="${builder}/publishing" target="generateIndex">
			<property name="isBuildTested" value="true" />
			<property name="dropTokenList" value="%sdk%,%tests%,%example%,%rcpruntime%,%rcpsdk%,%runtime%,%platformsdk%,%jdt%,%jdtsdk%,%pde%,%pdesdk%,%teamextras%,%swt%,%relengtools%" />
			<property name="result" value="${postingDirectory}/${buildLabel}" />
			<property name="testResultsTemplateFileName" value="${builder}/publishing/templateFiles/testResults.php.template" />
			<property name="dropTemplateFileName" value="${builder}/publishing/templateFiles/index.php.template" />
		</ant>
		<!--  Insert ftp url for drop directory  -->
		<replace file="${postingDirectory}/${buildLabel}/index.php" token="@buildlabel@" value="${buildLabel}" />
	</target>

	<target name="generatePerformanceResults">
		<mkdir dir="${buildDirectory}/${buildLabel}/performance" />
		<mkdir dir="${postingDirectory}/${buildLabel}/performance" />
		<taskdef name="performanceResults" classname="org.eclipse.releng.performance.PerformanceResultHtmlGenerator" />
		<condition property="configArgs" value="-ws gtk -arch ppc">
			<not>
				<equals arg1="{os.arch}" arg2="i386" />
			</not>
		</condition>
		<property name="configArgs" value="" />

		<java jar="${basedir}/../org.eclipse.releng.basebuilder/startup.jar" fork="true" maxmemory="256m">
			<arg line="${configArgs} -application org.eclipse.test.performance.ui.resultGenerator
					-baseline ${eclipse.perf.ref}
					-baseline.prefix 3.1_200506271435
					-current ${buildId}
					-jvm ${eclipse.perf.jvm}
					-output ${postingDirectory}/${buildLabel}/performance/
					-config eclipseperfwin1_R3.2,eclipseperflnx1_R3.2,eclipseperfwin2_R3.2,eclipseperflnx2_R3.2
					-config.properties ${eclipse.perf.config.descriptors}
					-highlight.latest 3.0.2_,2.1.3_
					-scenario.pattern org.eclipse.%.test"
				/>
			<env key="LD_LIBRARY_PATH" value="${basedir}/../org.eclipse.releng.basebuilder" />
			<sysproperty key="eclipse.perf.dbloc" value="${dbloc}" />
		</java>

		<performanceResults
			xmlDirectoryName="${postingDirectory}/${buildLabel}/performance/xml"
			dropDirectoryName="${postingDirectory}/${buildLabel}"
			testResultsTemplateFileName="${builder}/publishing/templateFiles/performance.php.template"
			testResultsHtmlFileName="performance/performance.php"
			hrefTestResultsTargetPath="html"
			testManifestFileName="${builder}/publishing/performanceTestManifest.xml" 
		/>
		
		<replace file="${postingDirectory}/${buildLabel}/performance/performance.php" token="@buildType@" value="${buildType}" />
	</target>

	<target name="verifyCompile" if="eclipse.running">
		<echo message="Checking for compile errors..." />
		<!-- Sends email to recipient list in monitor.properties with compile logs attached if errors found-->
		<verifyCompile install="${postingDirectory}/${buildLabel}/compilelogs" />
	</target>

	<target name="rSyncWithSnzZrh" unless="test">
		<waitfor maxwait="300" maxwaitunit="minute" checkevery="1" checkeveryunit="minute">
			<available file="${postingDirectory}/${buildLabel}/eclipse-Automated-Tests-${buildId}.zip" />
		</waitfor>
		<antcall target="zrhBuilds" />
		<antcall target="snzBuilds" />
	</target>

	<target name="snzBuilds" unless="N">
		<!--copy drops to local directory for rsync with snz-->
		<copy todir="/builds/transfer/files/snz">
			<fileset dir="${postingDirectory}" includes ="${buildLabel}/eclipse-SDK-*-win32.zip" excludes="${buildLabel}/eclipse-SDK-examples-*-win32.zip" />
		</copy>
	</target>

	<target name="zrhBuilds">
		<!--copy drops to local directory for rsync with zrh-->
		<copy todir="/builds/transfer/files/zrh">
			<fileset dir="${postingDirectory}" includes ="${buildLabel}/eclipse-SDK-*-macosx-carbon.tar.gz,${buildLabel}/eclipse-SDK-*-win32.zip,${buildLabel}/eclipse-SDK-*-linux-*.tar.gz" excludes="${buildLabel}/eclipse-SDK-examples-*-win32.zip,${buildLabel}/eclipse-SDK-*-linux-gtk-x86_64.tar.gz" />
		</copy>
	</target>
	<!-- ===================================================================== -->
	<!-- Default target                                                        -->
	<!-- ===================================================================== -->
	<target name="noDefault">
		<echo message="You must specify a target when invoking this file" />
	</target>
</project>
