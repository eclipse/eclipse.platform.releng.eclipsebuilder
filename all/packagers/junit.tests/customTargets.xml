<project default="noDefault">

	<target name="noDefault" />

	<!-- set the root of the output file name -->
	<property name="archiveRoot" value="eclipse-junit-tests-${buildId}"/>

	<!-- Target to get the packaging map files for the components of interest
     The files must be fetched into the downloadDirectory folder -->
	<target name="getMapFiles" unless="mapsFetched">
		<copy file="${packagingInfo}/../common.map" tofile="${downloadDirectory}/common.map" />
	</target>

	<target name="assemble.common.common.common.xml">
		<antcall target="assembler">
			<param name="archiveName" value="${archiveRoot}.zip"/>
		</antcall>
	</target>

	<target name="assembler">
		<mkdir dir="${postingDirectory}/${buildLabel}/checksum" />
		<property name="archiveFullPath" value="${buildDirectory}/${buildLabel}/${archiveName}" />
		<ant antfile="${assembleScriptName}" />
		<antcall target="packageTestFramework" />
	</target>

	<target name="packageTestFramework">
		<!--package automated test framework used in Eclipse builds-->

		<property name="workingDirectory" value="${buildDirectory}/test.assembly" />

		<!--unzip the junit tests-->
		<exec dir="${buildDirectory}/${buildLabel}" executable="unzip">
			<arg line="-o -qq eclipse*junit*.zip -d ${workingDirectory}" />
		</exec>

		<!-- create top level testing directory-->
		<mkdir dir="${workingDirectory}/eclipse-testing" />

		<!--copy label.properties file for use in performance testing-->
		<copy file="${buildDirectory}/label.properties" tofile="${workingDirectory}/eclipse-testing/label.properties" />

		<property name="test.properties" value="${workingDirectory}/eclipse-testing/test.properties"/>

		<!--generate test.properties.  Custom Ant task contributed by org.eclipse.build.tools in org.eclipse.releng.basebuilder.-->
		<generateTestProperties
		buildDirectory="${buildDirectory}"
		featureId="org.eclipse.sdk.tests"
		outputFile="${test.properties}"
	/>

		<!--load the property file created with the directory names for all test plugins-->
		<property file="${test.properties}" />

		<!-- Remove the plugin version number appended to the org.eclipse.test plugin directory.
   	     This is so that contributors of test.xml's do not have to update their paths to 
   	     library.xml in org.eclipse.test whenever its version is updated.
   	 -->
		<move todir="${workingDirectory}/eclipse/plugins/org.eclipse.test">
			<fileset dir="${workingDirectory}/eclipse/plugins/org.eclipse.test_3.1.0" />
		</move>

		<!--the Ant move task leaves behind an empty directory-->
		<delete dir="${workingDirectory}/eclipse/plugins/${org.eclipse.test}" includeEmptyDirs="true" />

		<!-- rezip the JUnit plugin tests -->
		<exec dir="${workingDirectory}" executable="zip">
			<arg line="-r -q eclipse-junit-tests-${buildId}.zip eclipse"/>
		</exec>

		<delete dir="${workingDirectory}/eclipse" includeEmptyDirs="true" />

		<!--Copy scripts and doc used in the automated testing to the testing directory-->
		<copy todir="${workingDirectory}/eclipse-testing">
			<fileset dir="${buildDirectory}/plugins/org.eclipse.test" includes="testframework.html,JUNIT.XSL" />
		</copy>
		<copy todir="${workingDirectory}/eclipse-testing">
			<fileset dir="${packagingInfo}/testScripts" />
		</copy>
		<move file="${workingDirectory}/eclipse-junit-tests-${buildId}.zip" todir="${workingDirectory}/eclipse-testing"/>

		<!--set execute permission on *nix shell script-->
		<chmod file="${workingDirectory}/eclipse-testing/runtests" perm="755"/>
		<property name="postingDirectory" value="${buildDirectory}" />

		<!--create zip file of the automated testing framework-->
		<exec dir="${workingDirectory}" executable="zip">
			<arg line="-r -q ${postingDirectory}/${buildLabel}/eclipse-Automated-Tests-${buildId}.zip eclipse-testing"/>
		</exec>
		<mkdir dir="${postingDirectory}/${buildLabel}/checksum" />
		<checksum file="${postingDirectory}/${buildLabel}/eclipse-Automated-Tests-${buildId}.zip" property="md5"/>
		<echo message="${md5} *eclipse-Automated-Tests-${buildId}.zip" file="${postingDirectory}/${buildLabel}/checksum/eclipse-Automated-Tests-${buildId}.zip.md5"/>
		<delete file="${buildDirectory}/${buildLabel}/eclipse-junit-tests-${buildId}.zip"  />
	</target>


</project>
