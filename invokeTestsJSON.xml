<!--
 Copyright (c) 2011 IBM Corporation and others.
 All rights reserved. This program and the accompanying materials
 are made available under the terms of the Eclipse Public License v1.0
 which accompanies this distribution, and is available at
 http://www.eclipse.org/legal/epl-v10.html

 Contributors:
     IBM Corporation - initial API and implementation
-->

<project name="Hudson-Tests" default="runTests">

	<property name="dropLocation" value="${buildDirectory}/${buildLabel}/drop" />
	<property name="TestDir" value="${base}/tests/${buildLabel}" />

	<target name="runTests">
		<antcall target="JUnitTests" />		
	</target>


	<target name="JUnitTests">
		<parallel>
			<antcall target="triggerHudsonTests">
				<param name="job" value="JUnit-win2" />
				<param name="suffix" value="win32.zip" />
			</antcall>
<!--			<antcall target="triggerHudsonTests">
				<param name="job" value="eclipse-JUnit-Linux2" />
				<param name="suffix" value="linux-gtk-x86_64.tar.gz" />
			</antcall>
			<antcall target="triggerHudsonTests">
				<param name="job" value="eclipse-JUnit-mac2" />
				<param name="suffix" value="macosx-cocoa-x86.zip" />
			</antcall> -->
		</parallel>
	</target>		 
			 

	<target name="triggerHudsonTests">

		<property environment="env" />

		<!-- /shared/eclipse/e4/build/e4/downloads -->
		<property name="baseURL" value="http://download.eclipse.org/eclipse/downloads/drops4/${buildId}" />

		<property name="JSON_SDK" value="{&quot;name&quot;:&quot;SDK&quot;,&quot;value&quot;:&quot;${baseURL}/eclipse-SDK-${buildId}-${suffix}&quot;}" />
		<property name="JSON_Tests" value="{&quot;name&quot;:&quot;Tests&quot;,&quot;value&quot;:&quot;${baseURL}/eclipse-Automated-Tests-${buildId}.zip&quot;}" />
		<property name="JSON_Platform" value="{&quot;name&quot;:&quot;Platform&quot;,&quot;value&quot;:&quot;${baseURL}/eclipse-platform-${buildId}-${suffix}&quot;}" />
		<property name="JSON_Deltapack" value="{&quot;name&quot;:&quot;Deltapack&quot;,&quot;value&quot;:&quot;${baseURL}/eclipse-${buildId}-delta-pack.zip&quot;}" />
		<property name="JSON_PlatformRelease" value="{&quot;name&quot;:&quot;PlatformRelease&quot;,&quot;value&quot;:&quot;http://download.eclipse.org/eclipse/downloads/drops/R-3.7.1-201109091335/eclipse-platform-3.7.1-${suffix}&quot;}" />
		<property name="JSON_buildId" value="{&quot;name&quot;:&quot;buildId&quot;,&quot;value&quot;:&quot;${buildId}&quot;}" />
		<!--current build repository too ? -->

		<property name="json" value="{&quot;parameter&quot;: [${JSON_SDK}, ${JSON_Tests},${JSON_Platform},${JSON_Deltapack},${JSON_PlatformRelease},${JSON_buildId}] }" />

		<!-- fetch the next hudson build number from the hudson job API -->
		<exec executable="curl">
			<arg line="-G" />
			<arg value="https://hudson.eclipse.org/hudson/job/${job}/api/json" />
			<arg line="-o ${buildDirectory}/nextBuildNumber" />
		</exec>
		<exec executable="bash" outputproperty="nextHudsonBuild">
			<arg value="-c" />
			<arg value="grep -o 'nextBuildNumber&quot;:[0-9]*' ${buildDirectory}/nextBuildNumber | cut -d ':' -f 2" />
		</exec>
		<echo message="Next hudson build number is ${nextHudsonBuild}." />

		<echo message="${json}" />
		<exec executable="curl">
			<arg line="-X POST" />
			<arg value="https://hudson.eclipse.org/hudson/job/${job}/build" />
			<arg line="-d token=${env.HUDSON_TOKEN}" />
			<arg value="--data-urlencode" />
			<arg value="json=${json}" />
		</exec>

		<property name="hudsonResultRootURL" value="https://hudson.eclipse.org/hudson/job/${job}/${nextHudsonBuild}/artifact" />
		<property name="hudsonResultURL" value="${hudsonResultRootURL}/archive.zip" />
		<antcall target="getHudsonResults" /> 
	</target>

	<target name="getHudsonResults">
		<!-- wait for the test results to appear -->
		<echo message="Waiting for ${hudsonResultURL}." />
		<waitfor maxwait="300" maxwaitunit="minute" checkevery="10" checkeveryunit="minute">
			<http url="${hudsonResultURL}" />
		</waitfor>
		
		<get ignoreerrors="true" src="${hudsonResultURL}" dest="${postingDirectory}/testresults" />		 
		<unzip src="${postingDirectory}/testResults/archive.zip" dest="${postingDirectory}/testresults"/>
		<!-- <delete file="${postingDirectory}/testResults/archive.zip"/> -->
	</target>
	
</project>