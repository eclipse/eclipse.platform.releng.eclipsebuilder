<project name="Build specific targets and properties" default="noDefault" basedir=".">

	<!-- ===================================================================== -->
	<!-- Run a given ${target} on all elements being built -->
	<!-- ===================================================================== -->
	<target name="allElements">
		<ant antfile="${genericTargets}" target="${target}">
			<property name="type" value="feature" />
			<property name="id" value="org.eclipse.platform.sdk" />
		</ant>
	</target>

	<!-- ===================================================================== -->
	<!-- Targets to assemble the built elements for particular configurations  -->
	<!-- These generally call the generated assemble scripts (named in -->
	<!-- ${assembleScriptName}) but may also add pre and post processing -->
	<!-- Add one target for each root element and each configuration -->
	<!-- ===================================================================== -->

	<!-- POST STEPS TO ADD -->
	<target name="assemble.org.eclipse.platform.sdk.win32.win32.x86">
		<property name="archiveName" value="eclipse-platform-SDK-${buildId}-win32.zip" />
		<antcall target="assemble" />
	</target>

	<target name="assemble.org.eclipse.platform.sdk.linux.motif.x86">
		<property name="archiveName" value="eclipse-platform-SDK-${buildId}-linux-motif.zip" />
		<antcall target="assemble" />
	</target>

	<target name="assemble.org.eclipse.platform.sdk.linux.gtk.x86">
		<property name="archiveName" value="eclipse-platform-SDK-${buildId}-linux-gtk.zip" />
		<antcall target="assemble" />
	</target>

	<target name="assemble.org.eclipse.platform.sdk.linux.gtk.amd64">
		<property name="archiveName" value="eclipse-platform-SDK-${buildId}-linux-gtk-amd64.zip" />
		<antcall target="assemble" />
	</target>

	<target name="assemble.org.eclipse.platform.sdk.solaris.motif.sparc">
		<property name="archiveName" value="eclipse-platform-SDK-${buildId}-solaris-motif.zip" />
		<antcall target="assemble" />
	</target>

	<target name="assemble.org.eclipse.platform.sdk.solaris.gtk.sparc">
		<property name="archiveName" value="eclipse-platform-SDK-${buildId}-solaris-gtk.zip" />
		<antcall target="assemble" />
	</target>

	<target name="assemble.org.eclipse.platform.sdk.qnx.photon.x86">
		<property name="archiveName" value="eclipse-platform-SDK-${buildId}-qnx-photon.zip" />
		<antcall target="assemble" />
	</target>

	<target name="assemble.org.eclipse.platform.sdk.aix.motif.ppc">
		<property name="archiveName" value="eclipse-platform-SDK-${buildId}-aix-motif.zip" />
		<antcall target="assemble" />
	</target>


	<target name="assemble.org.eclipse.platform.sdk.hpux.motif.PA_RISC">
		<property name="archiveName" value="eclipse-platform-SDK-${buildId}-hpux-motif.zip" />
		<antcall target="assemble" />
	</target>

	<target name="assemble.org.eclipse.platform.sdk.macosx.carbon.ppc">
		<property name="archiveName" value="eclipse-platform-SDK-${buildId}-macosx-carbon.tar.gz" />
		<antcall target="assemble" />
	</target>

	<target name="assemble">
		<ant antfile="${assembleScriptName}" />
	</target>

	<!-- ===================================================================== -->
	<!-- Check out map files from correct repository -->
	<!-- Replace values for cvsRoot, package and mapVersionTag as desired. -->
	<!-- ===================================================================== -->
	<target name="checkLocal">
		<available property="mapsLocal" file="${buildDirectory}/maps/org.eclipse.releng" />
	</target>
	<target name="getMapFiles" depends="checkLocal" unless="mapsLocal">

		<!-- ***  change the repo info -->
		<property name="mapCvsRoot" value=":pserver:anonymous@dev.eclipse.org:/home/eclipse" />
		<property name="mapVersionTag" value="R3_0_maintenance" />
		<cvs cvsRoot="${mapCvsRoot}" package="org.eclipse.releng" dest="${buildDirectory}/maps" tag="${mapVersionTag}" />
		<!--tag the map files project-->
		<antcall target="tagMapFiles" />
	</target>

	<target name="tagMapFiles" if="tagMaps">
		<cvs dest="${buildDirectory}/maps/org.eclipse.releng" command="tag r301_v${timestamp}" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before setup -->
	<!-- ===================================================================== -->
	<target name="preSetup">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after setup but before starting the build proper -->
	<!-- ===================================================================== -->
	<target name="postSetup">
		<!--fetch the additional pieces to build swt gtk64-->
		<property name="featureOnly" value="false" />
		<property name="featureAndPlugins" value="true" />
		<property name="featuresRecursively" value="false" />
		<ant antfile="genericTargets.xml" dir="${pde.build.scripts}" target="fetchElement">
			<property name="type" value="fragment" />
			<property name="id" value="org.eclipse.swt.gtk64" />
		</ant>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="preFetch">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the fetch -->
	<!-- ===================================================================== -->
	<target name="postFetch">
		<ant antfile="${genericTargets}" target="fetchElement">
			<property name="type" value="plugin" />
			<property name="id" value="platform-launcher" />
		</ant>
		<!--create launchersrc.zip and copy to org.eclipse.platform plugin (fix for bug #49237) -->
		<zip destfile="${buildDirectory}/plugins/org.eclipse.platform/launchersrc.zip" basedir="${buildDirectory}/plugins/platform-launcher" includes="library/**" />

		<!--fetch and compile swt tools-->
		<ant antfile="genericTargets.xml" dir="${pde.build.scripts}" target="fetchElement">
			<property name="type" value="plugin" />
			<property name="id" value="org.eclipse.swt.tools" />
		</ant>
		<ant antfile="genericTargets.xml" dir="${pde.build.scripts}" target="generateScript">
			<property name="type" value="plugin" />
			<property name="id" value="org.eclipse.swt.tools" />
		</ant>
		<ant antfile="build.xml" dir="${buildDirectory}/plugins/org.eclipse.swt.win32" target="build.jars">
			<property name="type" value="plugin" />
			<property name="id" value="org.eclipse.swt.win32" />
		</ant>
		<ant antfile="build.xml" dir="${buildDirectory}/plugins/org.eclipse.swt.tools" target="build.jars">
			<property name="type" value="plugin" />
			<property name="id" value="org.eclipse.swt.tools" />
			<property name="baseos" value="win32" />
			<property name="basews" value="win32" />
			<property name="basearch" value="x86" />
		</ant>

	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before generating build scripts -->
	<!-- ===================================================================== -->
	<target name="preGenerate">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after generating the build scripts -->
	<!-- ===================================================================== -->
	<target name="postGenerate">
		<antcall target="clean" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before assembling -->
	<!-- ===================================================================== -->
	<target name="preAssemble">

	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after assembling-->
	<!-- ===================================================================== -->
	<target name="postAssemble">
	</target>



	<!-- ===================================================================== -->
	<!-- Steps to do before running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="preProcess">
		<replace dir="${buildDirectory}/plugins" value="${timestamp}" token="@build@">
			<include name="**/about.mappings" />
		</replace>
		<replace dir="${buildDirectory}/features/org.eclipse.platform" value="${buildType}${timestamp}" token="@build@">
			<include name="**/config.ini" />
		</replace>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="postProcess">
		<condition property="logsAvailable">
			<istrue value="${javacVerbose}" />
		</condition>
		<antcall target="gatherLogs" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after everything is built and assembled -->
	<!-- (e.g., testing, posting, emailing, ...) -->
	<!-- ===================================================================== -->
	<target name="postBuild">
	</target>

	<!-- ===================================================================== -->
	<!-- Helper targets -->
	<!-- ===================================================================== -->
	<target name="gatherLogs" if="logsAvailable">

		<mkdir dir="${buildDirectory}/${buildLabel}/compilelogs" />
		<antcall target="allElements">
			<param name="target" value="gatherLogs" />
		</antcall>

		<unzip dest="${buildDirectory}/${buildLabel}/compilelogs" overwrite="true">
			<fileset dir="${buildDirectory}/features/org.eclipse.platform.sdk">
				<include name="*.log.zip" />
			</fileset>
		</unzip>
	</target>
	<target name="clean" unless="noclean">
		<antcall target="allElements">
			<param name="target" value="cleanElement" />
		</antcall>
	</target>
	<!-- ===================================================================== -->
	<!-- Default target                                                        -->
	<!-- ===================================================================== -->
	<target name="noDefault">
		<echo message="You must specify a target when invoking this file" />
	</target>

</project>
