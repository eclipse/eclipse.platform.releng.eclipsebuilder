<?xml version="1.0" encoding="UTF-8"?>
    <!--
        A utility ant script to run Eclipse's antRunner, from a "plain" ant
        script. It assumes the existence of (or, but "get") the base builder.
        Long term, won't really need to be literally the base builder,
        but any eclipse installed into a directory named org.eclipse.releng.basebuilder.
    -->
<project
    name="runAntRunner"
    default="runAntRunner"
    basedir=".">

    <property
        name="failOnError"
        value="true" />
    <property
        name="antrunnertarget"
        value="build" />
    <!-- we assume default, if not specified by caller -->
    <property
        name="antrunnerfile"
        value="build.xml" />

    <target name="runAntRunner">

        <!--
             must tell full path of VM to use (probably easier ways to integrate
             with Hudson? But for now ... old school
        -->
        <fail unless="JAVA_6_HOME" />

        <java
            taskname="AntRunner"
            jvm="${JAVA_6_HOME}/bin/java"
            fork="true"
            failonerror="${failOnError}"
            classname="org.eclipse.equinox.launcher.Main">
            <classpath>
                <fileset dir="${pde.builder.path}/plugins">
                    <include name="org.eclipse.equinox.launcher_*.jar" />
                </fileset>
            </classpath>
            <!--
            <jvmarg value="-Dosgi.ws=${env.BASEWS}" />
            <jvmarg value="-Dosgi.os=${env.BASEOS}" />
            <jvmarg value="-Dosgi.arch=${env.BASEARCH}" />

            <jvmarg value="-Dbuild.home=${env.BUILD_HOME}" />
            -->
            <jvmarg value="-DJAVA_6_HOME=${env.JAVA_6_HOME}" />
            <jvmarg value="-DJAVA_5_HOME=${env.JAVA_5_HOME}" />
            <jvmarg value="-DJAVA_4_HOME=${env.JAVA_4_HOME}" />

            <jvmarg value="${buildcleanarg}" />
            <jvmarg value="${buildercleanarg}" />

            <arg value="-application" />
            <arg value="org.eclipse.ant.core.antRunner" />
            <arg value="-buildfile" />
            <arg value="${antrunnerfile}" />
            <arg value="${antrunnertarget}" />
        </java>
    </target>

    <!--
    don't need right now, but will ... and good example of how to pass,
    or not, arguments without getting "noise" on the line.
    -->
    <target name="init">
        <condition
            property="buildcleanarg"
            value="-Dbuild.clean=${build.clean}"
            else="">
            <isset property="build.clean" />
        </condition>

        <condition
            property="buildercleanarg"
            value="-Dcheckout.builder.clean=${checkout.builder.clean}"
            else="">
            <isset property="checkout.builder.clean" />
        </condition>

    </target>
</project>