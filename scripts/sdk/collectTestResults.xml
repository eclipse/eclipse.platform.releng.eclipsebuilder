
<project
    name="collectTestResults"
    default="collectTestResults"
    basedir=".">

    <property
        name="job"
        value="ep4-unit-mac64" />
    <property
        name="buildNumber"
        value="49" />
    <property
        name="buildId"
        value="N20121014-2000" />
    <property
        name="eclipseStream"
        value="4.3.0" />



    <target
        name="collectTestResults"
        depends="init"
        description="Collect Test Results from Hudson to build machine location.">


        <mkdir dir="${tmpzipdir}" />

        <get
            ignoreerrors="true"
            src="${hudsonResultURL}"
            dest="${tmpzipdir}/archive.zip" />
        <unzip
            src="${tmpzipdir}/archive.zip"
            dest="${postingDirectory}/${buildId}/testresults/">
            <globmapper
                from="archive/workarea/${buildId}/eclipse-testing/results/*"
                to="*" />
        </unzip>

    </target>




    <target
        name="init"
        unless="collectTestResultsInitialized">

        <script language="javascript"><![CDATA[
            var buildId = project.getProperty("buildId");
            var patternbuildType = new RegExp(/^([IMNSR])(\d{8})-(\d{4})$/);

            var sArraybuildType = patternbuildType.exec(buildId);
            // sArray 0 is "whole match"
            var buildType =  sArraybuildType[1];
            project.setProperty("buildType", buildType);
            
            var eclipseStream = project.getProperty("eclipseStream");
            var patternStream = new RegExp(/(\d+)\.(\d+)\.(\d+)/);

            var sArrayStream = patternStream.exec(eclipseStream);
            // sArray[0] is "whole match"
            var eclipseStreamMajor = sArrayStream[1];
            var eclipseStreamMinor = sArrayStream[2];
            var eclipseStreamService = sArrayStream[3];
            project.setProperty("eclipseStreamMajor", eclipseStreamMajor);
            project.setProperty("eclipseStreamMinor", eclipseStreamMinor);
            project.setProperty("eclipseStreamService", eclipseStreamService);

            var buildRoot="/shared/eclipse/eclipse" + eclipseStreamMajor + buildType;
            var siteDir= buildRoot + "/siteDir";
            var postingDirectory = siteDir + "/eclipse/downloads/drops"
            if (eclipseStreamMajor > 3 )
            {
                postingDirectory = siteDir + "/eclipse/downloads/drops" + eclipseStreamMajor;
            }
            project.setProperty("postingDirectory", postingDirectory);
            ]]>
        </script>
        <!--
        buildRoot=/shared/eclipse/eclipse${eclipseStreamMajor}${buildType}
        buildDir=${buildRoot}/build
        supportDir=${buildDir}/supportDir
        eclipsebuilder=org.eclipse.releng.eclipsebuilder
        builderDir=${supportDir}/$eclipsebuilder

        # should buildDirectory be set at "main" one from actual build? 
        buildDirectory=${supportDir}/src

        # note, to be consistent, I changed json xml file so it adds buildId to postingDirectory 
        siteDir=${buildRoot}/siteDir
        postingDirectory=${siteDir}/eclipse/downloads/drops
        if [[ "${eclipseStreamMajor}" > 3 ]]
        then
            postingDirectory=${siteDir}/eclipse/downloads/drops${eclipseStreamMajor}
        fi
        -->

        <echo message="postingDirectory: ${postingDirectory}" />

        <property
            name="hudsonResultRootURL"
            value="https://hudson.eclipse.org/hudson/job/${job}/${buildNumber}/artifact/*zip*" />
        <property
            name="hudsonResultURL"
            value="${hudsonResultRootURL}/archive.zip" />
        <echo message="hudsonResultURL ${hudsonResultURL} " />

        <property
            name="tmpzipdir"
            value="${postingDirectory}/${buildId}/testresults/tmp${job}" />

        <property
            name="collectTestResultsInitialized"
            value="true" />

    </target>

</project>