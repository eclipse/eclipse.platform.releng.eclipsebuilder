
<project
    name="collectTestResults"
    default="collectTestResults"
    basedir=".">

    <!-- example properties. Caller normally provides. -->
    <property
        name="job"
        value="ep4-unit-mac64" />
    <property
        name="buildNumber"
        value="49" />
    <property
        name="buildId"
        value="N20121014-2000" />
    <property
        name="eclipseStream"
        value="4.3.0" />
    <property
        name="BUILD_TECH"
        value="CBI" />
    <property
        name="EBUILDER_HASH"
        value="master" />


    <target
        name="collectTestResults"
        depends="init"
        description="Collect Test Results from Hudson to build machine location.">


        <mkdir dir="${tmpzipdir}" />

        <retry
            retrycount="3"
            retrydelay="1000">
            <get
                src="${hudsonResultURL}"
                dest="${tmpzipdir}/archive.zip" />
        </retry>

        <mkdir dir="${postingDirectory}/${buildId}/testresults" />
        
        <unzip overwrite="true" 
            src="${tmpzipdir}/archive.zip"
            dest="${postingDirectory}/${buildId}/testresults/">
            <globmapper
                from="archive/workarea/${buildId}/eclipse-testing/results/*"
                to="*" />
        </unzip>

        <echo message="DEBUG: eclipseStream buildId BUILD_TECH EBUILDER_HASH: ${eclipseStream} ${buildId} ${BUILD_TECH} ${EBUILDER_HASH}" />
        
        <exec executable="/bin/bash">
            <arg line="/shared/eclipse/sdk/promotion/updateDropLocation.sh ${eclipseStream} ${buildId} ${BUILD_TECH} ${EBUILDER_HASH}" />
        </exec>

        <delete>
        	<fileset dir="${postingDirectory}/${buildId}/testresults">
        	    <include name="${tmpzipdir}" />
        	    <include name="archive/**" />
        	</fileset>
        </delete>

    </target>




    <target
        name="init"
        unless="collectTestResultsInitialized">

        <property environment="env" />

        <property
            name="env.HUDSON_HOST"
            value="hudson.eclipse.org" />
        <property
            name="env.HUDSON_PROTOCOL"
            value="https" />

        <script language="javascript"><![CDATA[
            var buildId = project.getProperty("buildId");
            var patternbuildType = new RegExp(/^([IMNSR])(\d{8})-(\d{4})$/);
            var buildTech = project.getProperty("BUILD_TECH");
            
            var sArraybuildType = patternbuildType.exec(buildId);
            // sArray 0 is "whole match"
            var buildType =  sArraybuildType[1];
            project.setProperty("buildType", buildType);

            var eclipseStream = project.getProperty("eclipseStream");
            var patternStream = new RegExp(/(\d+)\.(\d+)\.(\d+)/);

            var sArrayStream = patternStream.exec(eclipseStream);
            // sArray[0] is "whole match"
            var eclipseStreamMajor = sArrayStream[1];
            var eclipseStreamMinor = sArrayStream[2];
            var eclipseStreamService = sArrayStream[3];
            project.setProperty("eclipseStreamMajor", eclipseStreamMajor);
            project.setProperty("eclipseStreamMinor", eclipseStreamMinor);
            project.setProperty("eclipseStreamService", eclipseStreamService);

            var buildRoot="/shared/eclipse/eclipse" + eclipseStreamMajor + buildType;
            if (buildTech == "CBI") 
            {
                buildRoot="/shared/eclipse/builds/" + eclipseStreamMajor + buildType;
            }
            var siteDir= buildRoot + "/siteDir";
            var postingDirectory = siteDir + "/eclipse/downloads/drops"
            if (eclipseStreamMajor > 3 )
            {
                postingDirectory = siteDir + "/eclipse/downloads/drops" + eclipseStreamMajor;
            }
            if (buildTech == "CBI") 
            {
                postingDirectory = postingDirectory + "cbibased";
            }
            project.setProperty("postingDirectory", postingDirectory);
            ]]>
        </script>


        <echo message="postingDirectory: ${postingDirectory}" />

        <property
            name="hudsonResultRootURL"
            value="${env.HUDSON_PROTOCOL}://${env.HUDSON_HOST}/hudson/job/${job}/${buildNumber}/artifact/*zip*" />
        <property
            name="hudsonResultURL"
            value="${hudsonResultRootURL}/archive.zip" />
        <echo message="hudsonResultURL ${hudsonResultURL} " />

        <property
            name="tmpzipdir"
            value="${postingDirectory}/${buildId}/testresults/tmp${job}" />

        <property
            name="collectTestResultsInitialized"
            value="true" />

    </target>

</project>