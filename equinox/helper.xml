<project name="Build specific targets and properties" default="noDefault" basedir=".">

	<property name="postingDirectory" value="${buildDirectory}" />
	<property name="equinoxPostingDirectory" value="${postingDirectory}/../../equinox/drops" />
	<property name="publishingContent" value="${equinox.build.configs}/../publishingFiles" />

	<target name="publish">
		<antcall target="updateTestManifests" />
		<available classname="org.eclipse.releng.generators.EclipseTestResultsGenerator" property="class" value="org.eclipse.releng.generators.EclipseTestResultsGenerator" />
		<taskdef name="indexResults" classname="${class}" />

		<!-- generate md5s and sha1s for bundle -->
		<mkdir dir="${equinoxPostingDirectory}/${buildLabel}/checksum"/>

		<exec executable="sh" dir="${equinoxPostingDirectory}/${buildLabel}">
			<arg line="${equinox.build.configs}/../../extras/produceChecksum" />
		</exec>

		<!--post clickThroughs-->
		<copy todir="${equinoxPostingDirectory}/${buildLabel}">
			<fileset dir="${buildDirectory}/maps/org.eclipse.releng" includes="clickThroughs/" />
		</copy>

		<!--copy compile logs to this posting directory-->
		<copy todir="${equinoxPostingDirectory}/${buildLabel}" overwrite="true">
			<fileset dir="${postingDirectory}/${buildLabel}" includes="compilelogs/**/plugins/org.eclipse.osgi*/**,compilelogs/**/plugins/org.eclipse.equinox*/**" excludes="compilelogs/**/plugins/org.eclipse.osgi.test*/**" />
		</copy>

		<!--post directory.txt-->
		<copy file="${buildDirectory}/directory.txt" todir="${equinoxPostingDirectory}/${buildLabel}" />

		<copy todir="${equinoxPostingDirectory}/${buildLabel}">
			<fileset dir="${publishingContent}/staticDropFiles" />
		</copy>

		<!--regenerate the index page with links to test results-->
		<indexResults 
		     isBuildTested="false"
	   		 sendMail="false"
	   		 buildType="${buildType}"
		     dropTokenList="%equinox%,%framework%,%extrabundles%,%incubator%,%launchers%"
		     xmlDirectoryName="${postingDirectory}/testresults/xml"
		     dropDirectoryName="${equinoxPostingDirectory}/${buildLabel}"
		     testResultsTemplateFileName="${publishingContent}/templateFiles/testResults.php.template"
		     dropTemplateFileName="${publishingContent}/templateFiles/index.php.template"
		     testResultsHtmlFileName="testResults.php"
		     dropHtmlFileName="index.php"
		     hrefTestResultsTargetPath="../../../downloads/drops/${buildLabel}/testresults/html"
		     hrefCompileLogsTargetPath="compilelogs"
		     compileLogsDirectoryName="${equinoxPostingDirectory}/${buildLabel}/compilelogs"
		     testManifestFileName="${publishingContent}/testManifest.xml"
	   />
		<tstamp>
			<format property="TODAY" pattern="MMMM d, yyyy"/>
		</tstamp>

		<!--  Insert Build Type descriptor  -->
		<condition property="typeDescription" value="Integration">
			<equals arg1="${buildType}" arg2="I" />
		</condition>
		<condition property="typeDescription" value="Nightly">
			<equals arg1="${buildType}" arg2="N" />
		</condition>
		<condition property="typeDescription" value="Release">
			<equals arg1="${buildType}" arg2="R" />
		</condition>
		<condition property="typeDescription" value="Stable">
			<equals arg1="${buildType}" arg2="S" />
		</condition>
		<condition property="typeDescription" value="Maintenance">
			<equals arg1="${buildType}" arg2="M" />
		</condition>
		<condition property="typeDescription" value="Test">
			<equals arg1="${buildType}" arg2="T" />
		</condition>

		<replace file="${equinoxPostingDirectory}/${buildLabel}/index.php" token="@type@" value="${typeDescription}"/>

		<!--  Insert Build Date  -->
		<replace file="${equinoxPostingDirectory}/${buildLabel}/index.php" token="@date@" value="${TODAY}"/>

		<!--  Insert Build Name  -->
		<replace file="${equinoxPostingDirectory}/${buildLabel}/index.php" token="@buildid@" value="${buildId}"/>

		<!--  Update timestamp on file to permit overwrite through Ant copy task  -->
		<touch file="${equinoxPostingDirectory}/${buildLabel}/index.php" />
		<!--  Insert ftp url for drop directory  -->
		<replace file="${equinoxPostingDirectory}/${buildLabel}/index.php" token="@buildlabel@" value="${buildLabel}" />
	</target>


	<target name="updateTestManifests">
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.supplement"/>
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.device"/>
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.ds"/>
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.event"/>
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.http"/>
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.log"/>
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.metatype"/>
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.useradmin"/>
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.wireadmin"/>
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.servlet.api"/>
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.osgi" />
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.osgi.util" />
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.osgi.services" />
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.registry" />
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.preferences" />
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.common" />
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.servlet.api" />
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.http.registry" />
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.cm" />
		</antcall>
		<antcall target="updateTestManifest">
					<param name="bundle.id" value="org.eclipse.equinox.servlet.bridge.http" />
		</antcall>
		<antcall target="updateTestManifest">
					<param name="bundle.id" value="org.eclipse.equinox.servlet.bridge.launcher" />
    	</antcall>		
	</target>


	<!-- ===================================================================== -->
	<!-- Helper targets -->
	<!-- ===================================================================== -->
	<target name="updateTestManifest">
		<apply executable="ls" output="${buildDirectory}/${bundle.id}.txt" dir="${equinoxPostingDirectory}/${buildLabel}">
			<fileset dir="${equinoxPostingDirectory}/${buildLabel}">
				<patternset>
					<include name="${bundle.id}_*.jar" />
				</patternset>
			</fileset>
		</apply>

		<replaceregexp file="${buildDirectory}/${bundle.id}.txt" match="/.+/" replace=""/>
		<replaceregexp file="${buildDirectory}/${bundle.id}.txt" match="\.jar" replace=""/>
		<replaceregexp file="${buildDirectory}/${bundle.id}.txt" match="\n" replace=""/>
		<loadfile property="bundle.jar" srcFile="${buildDirectory}/${bundle.id}.txt" failonerror="off"/>
		<delete file="${buildDirectory}/${bundle.id}.txt" failonerror="false"/>
		<replace file="${equinox.build.configs}/../publishingFiles/testManifest.xml" token="@${bundle.id}@" value="${bundle.jar}"/>
	</target>

	<!-- ===================================================================== -->
	<!-- Default target                                                        -->
	<!-- ===================================================================== -->
	<target name="noDefault">
		<echo message="You must specify a target when invoking this file" />
	</target>

</project>
