<project name="Build a Product" default="main">

	<!-- ===================================================================== -->
	<!-- Global properties.  See the build.properties for information on -->
	<!-- the properties which callers can control. -->
	<!-- ===================================================================== -->
	<property name="allElementsFile" value="${eclipse.pdebuild.scripts}/productBuild/allElements.xml" />
	<import file="${eclipse.pdebuild.scripts}/build.xml" />
	<property name="pluginPath" value="" />
	<property name="pluginList" value="" />
	<property name="featureList" value="" />
	<property name="includeLaunchers" value="true" />

	<!-- ===================================================================== -->
	<!-- main entry point to setup, fetch, generate, build etc. Use -->
	<!-- the customTargets.xml to modify the build behaviour. -->
	<!-- ===================================================================== -->
	<target name="main" description="the main build target">
		<antcall target="preBuild" />
		<antcall target="generateFeature">
			<!-- Generate the feature to drive the fetch -->
			<param name="verify" value="false" />
		</antcall>
		<antcall target="fetch" />
		<antcall target="generateFeature">
			<!-- We are calling generate feature a second time so that we can get the pack / unpack clause fixed -->
			<param name="verify" value="true" />
		</antcall>
		<antcall target="generate" />
		<antcall target="process" />
		<antcall target="assemble" />
		<antcall target="package" />
		<antcall target="postBuild" />
	</target>

	<!-- ===================================================================== -->
	<!-- Generate a container feature based on the product file                -->
	<!-- The plugin or feature containing the .product file will need to exist -->
	<!-- already, use preSetup or postSetup to fetch it if necessary           -->
	<!-- ===================================================================== -->
	<!-- featureId="org.eclipse.pde.build.container.feature" -->
	<target name="generateFeature">
		<eclipse.generateFeature featureId="org.eclipse.pde.build.container.feature" buildDirectory="${buildDirectory}" baseLocation="${baseLocation}" productFile="${product}" verify="${verify}" pluginPath="${pluginPath}" configInfo="${configs}" pluginList="${pluginList}" featureList="${featureList}" includeLaunchers="${includeLaunchers}" />
	</target>


	<target name="postBuild">
		<move file="${buildDirectory}/${buildLabel}/${buildLabel}-win32.win32.x86.zip" tofile="${equinoxPostingDirectory}/${buildLabel}/equinox.p2.installer-${buildLabel}-win32.win32.x86.zip" />
		<move file="${buildDirectory}/${buildLabel}/${buildLabel}-linux.gtk.x86.zip" tofile="${equinoxPostingDirectory}/${buildLabel}/equinox.p2.installer-${buildLabel}-linux.gtk.x86.tar.gz" />
		<move file="${buildDirectory}/${buildLabel}/${buildLabel}-macosx.carbon.x86.zip" tofile="${equinoxPostingDirectory}/${buildLabel}/equinox.p2.installer-${buildLabel}-macosx.carbon.x86.tar.gz" />

		<antcall target="assembler">
			<param name="archiveName" value="equinox.p2.installer-${buildLabel}-win32.win32.x86.zip" />
		</antcall>
		<antcall target="assembler">
			<param name="archiveName" value="equinox.p2.installer-${buildLabel}-linux.gtk.x86.tar.gz" />
		</antcall>
		<antcall target="assembler">
			<param name="archiveName" value="equinox.p2.installer-${buildLabel}-macosx.carbon.x86.tar.gz" />
		</antcall>
	</target>

	<target name="assembler">
		<mkdir dir="${equinoxPostingDirectory}/${buildLabel}/checksum" />
		<property name="archiveFullPath" value="${equinoxPostingDirectory}/${buildLabel}/${archiveName}" />
		<checksum file="${archiveFullPath}" property="md5" />
		<checksum file="${archiveFullPath}" property="sha" />
		<echo message="${md5} *${archiveName}" file="${equinoxPostingDirectory}/${buildLabel}/checksum/${archiveName}.md5" />
		<echo message="${sha} *${archiveName}" file="${equinoxPostingDirectory}/${buildLabel}/checksum/${archiveName}.sha1" />
	</target>



</project>
