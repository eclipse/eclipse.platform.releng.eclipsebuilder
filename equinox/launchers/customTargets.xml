<project name="Build specific targets and properties" default="noDefault" basedir=".">

	<property name="postingDirectory" value="${buildDirectory}" />
	<property name="equinoxPostingDirectory" value="${postingDirectory}/../../equinox/drops" />

	<!-- ===================================================================== -->
	<!-- Run a given ${target} on all elements being built -->
	<!-- ===================================================================== -->
	<target name="allElements">
		<ant antfile="${genericTargets}" target="${target}">
			<property name="type" value="feature" />
			<property name="id" value="master-root" />
		</ant>
	</target>

	<!-- ===================================================================== -->
	<!-- Targets to assemble the built elements for particular configurations  -->
	<!-- These generally call the generated assemble scripts (named in -->
	<!-- ${assembleScriptName}) but may also add pre and post processing -->
	<!-- Add one target for each root element and each configuration -->
	<!-- ===================================================================== -->
	<target name="assemble.master-root.equinox-launcher-linux.gtk.x86">
		<property name="archiveName" value="launchers-linux.gtk.x86.${buildId}.tar.gz" />
		<antcall target="assemble" />
	</target>
	<target name="assemble.master-root.equinox-launcher-win32.win32.x86">
		<property name="archiveName" value="launchers-win32.win32.x86.${buildId}.zip" />
		<antcall target="assemble" />
	</target>
	<target name="assemble.master-root.equinox-launcher-linux.gtk.x86_64">
		<property name="archiveName" value="launchers-linux.gtk.x86_64.${buildId}.tar.gz" />
		<antcall target="assemble" />
	</target>
	<target name="assemble.master-root.equinox-launcher-linux.gtk.ppc">
		<property name="archiveName" value="launchers-linux.gtk.ppc.${buildId}.tar.gz" />
		<antcall target="assemble" />
	</target>
	<target name="assemble.master-root.equinox-launcher-linux.motif.x86">
		<property name="archiveName" value="launchers-linux.motif.x86.${buildId}.tar.gz" />
		<antcall target="assemble" />
	</target>
	<target name="assemble.master-root.equinox-launcher-solaris.motif.sparc">
		<property name="archiveName" value="launchers-solaris.motif.sparc.${buildId}.zip" />
		<antcall target="assemble" />
	</target>
	<target name="assemble.master-root.equinox-launcher-solaris.gtk.sparc">
		<property name="archiveName" value="launchers-solaris.gtk.sparc.${buildId}.zip" />
		<antcall target="assemble" />
	</target>
	<target name="assemble.master-root.equinox-launcher-aix.motif.ppc">
		<property name="archiveName" value="launchers-aix.motif.ppc.${buildId}.zip" />
		<antcall target="assemble" />
	</target>
	<target name="assemble.master-root.equinox-launcher-hpux.motif.PA_RISC">
		<property name="archiveName" value="launchers-hpux.motif.PA_RISC.${buildId}.zip" />
		<antcall target="assemble" />
	</target>
	<target name="assemble.master-root.equinox-launcher-macosx.carbon.ppc">
		<property name="archiveName" value="launchers-macosx.carbon.ppc.${buildId}.tar.gz" />
		<antcall target="assemble" />
	</target>

	<target name="assemble">
		<property name="archiveFullPath" value="${buildDirectory}/${buildLabel}/${archiveName}" />
		<ant antfile="${assembleScriptName}" />
	</target>
	<target name="postPackage">
		<exec executable="unzip" dir="${basedir}">
			<arg line="-j ${postingDirectory}/${buildLabel}/eclipse-platform-${buildId}-win32.zip eclipse/plugins/org.eclipse.osgi* eclipse/plugins/org.eclipse.equinox* -d ${buildDirectory}/${buildLabel}"/>
		</exec>
		<antcall target="buildBundles"/>

		<mkdir dir="${buildDirectory}/${buildLabel}/checksum"/>
		<exec executable="sh" dir="${buildDirectory}/${buildLabel}">
			<arg line="${builder}/../all/produceChecksum" />
		</exec>
	</target>
	<!-- ===================================================================== -->
	<!-- Check out map files from correct repository -->
	<!-- Replace values for cvsRoot, package and mapVersionTag as desired. -->
	<!-- ===================================================================== -->
	<target name="getMapFiles">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before setup -->
	<!-- ===================================================================== -->
	<target name="preSetup">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after setup but before starting the build proper -->
	<!-- ===================================================================== -->
	<target name="postSetup">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="preFetch">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the fetch -->
	<!-- ===================================================================== -->
	<target name="postFetch">
		<!-- <antcall target="buildEquinoxSupplement" /> -->

	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before generating build scripts -->
	<!-- ===================================================================== -->
	<target name="preGenerate">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after generating the build scripts -->
	<!-- ===================================================================== -->
	<target name="postGenerate">
	</target>


	<!-- ===================================================================== -->
	<!-- Steps to do before assembling -->
	<!-- ===================================================================== -->
	<target name="preAssemble">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after assembling-->
	<!-- ===================================================================== -->
	<target name="postAssemble">
	</target>

	<target name="buildBundles">
		<antcall target="buildBundle">
			<param name="bundle.id" value="org.eclipse.equinox.supplement"/>
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.supplement"/>
		</antcall>
		<antcall target="buildBundle">
			<param name="bundle.id" value="org.eclipse.equinox.device"/>
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.device"/>
		</antcall>
		<antcall target="buildBundle">
			<param name="bundle.id" value="org.eclipse.equinox.ds"/>
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.ds"/>
		</antcall>
		<antcall target="buildBundle">
			<param name="bundle.id" value="org.eclipse.equinox.event"/>
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.event"/>
		</antcall>
		<antcall target="buildBundle">
			<param name="bundle.id" value="org.eclipse.equinox.http"/>
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.http"/>
		</antcall>
		<antcall target="buildBundle">
			<param name="bundle.id" value="org.eclipse.equinox.log"/>
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.log"/>
		</antcall>
		<antcall target="buildBundle">
			<param name="bundle.id" value="org.eclipse.equinox.metatype"/>
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.metatype"/>
		</antcall>
		<antcall target="buildBundle">
			<param name="bundle.id" value="org.eclipse.equinox.useradmin"/>
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.useradmin"/>
		</antcall>
		<antcall target="buildBundle">
			<param name="bundle.id" value="org.eclipse.equinox.wireadmin"/>
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.wireadmin"/>
		</antcall>
		<antcall target="buildBundle">
			<param name="bundle.id" value="org.eclipse.equinox.servlet.api"/>
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.servlet.api"/>
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.osgi" />
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.osgi.util" />
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.osgi.services" />
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.registry" />
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.preferences" />
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.common" />
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.equinox.servlet.api" />
		</antcall>
	</target>

	<target name="buildBundle">
		<ant antfile="genericTargets.xml" dir="${pde.build.scripts}" target="fetchElement">
			<property name="type" value="plugin" />
			<property name="id" value="${bundle.id}" />
		</ant>
		<ant antfile="genericTargets.xml" dir="${pde.build.scripts}" target="generateScript">
			<property name="type" value="plugin" />
			<property name="id" value="${bundle.id}" />
		</ant>
		<ant antfile="build.xml" dir="${buildDirectory}/plugins/${bundle.id}" target="build.update.jar">
			<property name="type" value="plugin" />
			<property name="id" value="${bundle.id}" />
		</ant>
		<copy todir="${buildDirectory}/${buildLabel}" failonerror="false">
			<fileset dir="${buildDirectory}/plugins/${bundle.id}">
				<include name="${bundle.id}*.jar" />
			</fileset>
		</copy>
		<copy todir="${postingDirectory}/${buildLabel}/compilelogs" overwrite="true" failonerror="false">
			<fileset dir="${buildDirectory}/plugins/${bundle.id}/temp.folder">
				<include name="*.log" />
			</fileset>
		</copy>
	</target>
	<!-- ===================================================================== -->
	<!-- Steps to do before running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="preProcess">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="postProcess">
	</target>

	<target name="prePackage" />

	<!-- ===================================================================== -->
	<!-- Steps to do after everything is built and assembled -->
	<!-- (e.g., testing, posting, emailing, ...) -->
	<!-- ===================================================================== -->
	<target name="postBuild">
		<property name="postingDirectory" value="${buildDirectory}}" />

		<available classname="org.eclipse.releng.generators.EclipseTestResultsGenerator" property="class" value="org.eclipse.releng.generators.EclipseTestResultsGenerator" />
		<taskdef name="indexResults" classname="${class}" />

		<!--post clickThroughs-->
		<copy todir="${equinoxPostingDirectory}/${buildLabel}">
			<fileset dir="${buildDirectory}/maps/org.eclipse.releng" includes="clickThroughs/" />
		</copy>

		<!--copy compile logs to this posting directory-->
		<copy todir="${equinoxPostingDirectory}/${buildLabel}">
			<fileset dir="${postingDirectory}/${buildLabel}" includes="compilelogs/**/plugins/org.eclipse.osgi*/**" excludes="compilelogs/**/plugins/org.eclipse.osgi.test*/**" />
		</copy>

		<!--post directory.txt-->
		<copy file="${buildDirectory}/directory.txt" todir="${equinoxPostingDirectory}/${buildLabel}" />

		<copy todir="${equinoxPostingDirectory}/${buildLabel}">
			<fileset dir="${builder}/../publishing/staticDropFiles" />
		</copy>

		<!--regenerate the index page with links to test results-->
		<indexResults 
		 		     isBuildTested="false"
		 		   		 sendMail="false"
		 		   		 buildType="${buildType}"
		 		     dropTokenList="%framework%,%extrabundles%,%launchers%"
		 		     xmlDirectoryName="${postingDirectory}/testresults/xml"
		 		     dropDirectoryName="${equinoxPostingDirectory}/${buildLabel}"
		 		     testResultsTemplateFileName="${builder}/../publishing/templateFiles/testResults.php.template"
		 		     dropTemplateFileName="${builder}/../publishing/templateFiles/index.php.template"
		 		     testResultsHtmlFileName="testResults.php"
		 		     dropHtmlFileName="index.php"
		 		     hrefTestResultsTargetPath="../../../downloads/drops/${buildLabel}/testresults/html"
		 		     hrefCompileLogsTargetPath="compilelogs"
		 		     compileLogsDirectoryName="${equinoxPostingDirectory}/${buildLabel}/compilelogs"
		 		     testManifestFileName="${builder}/../publishing/testManifest.xml"
		 		   />
		<tstamp>
			<format property="TODAY" pattern="MMMM d, yyyy"/>
		</tstamp>

		<!--  Insert Build Type descriptor  -->
		<condition property="typeDescription" value="Integration">
			<equals arg1="${buildType}" arg2="I" />
		</condition>
		<condition property="typeDescription" value="Nightly">
			<equals arg1="${buildType}" arg2="N" />
		</condition>
		<condition property="typeDescription" value="Release">
			<equals arg1="${buildType}" arg2="R" />
		</condition>
		<condition property="typeDescription" value="Stable">
			<equals arg1="${buildType}" arg2="S" />
		</condition>
		<condition property="typeDescription" value="Maintenance">
			<equals arg1="${buildType}" arg2="M" />
		</condition>
		<condition property="typeDescription" value="Test">
			<equals arg1="${buildType}" arg2="T" />
		</condition>

		<replace file="${equinoxPostingDirectory}/${buildLabel}/index.php" token="@type@" value="${typeDescription}"/>

		<!--  Insert Build Date  -->
		<replace file="${equinoxPostingDirectory}/${buildLabel}/index.php" token="@date@" value="${TODAY}"/>

		<!--  Insert Build Name  -->
		<replace file="${equinoxPostingDirectory}/${buildLabel}/index.php" token="@buildid@" value="${buildId}"/>

		<!--  Update timestamp on file to permit overwrite through Ant copy task  -->
		<touch file="${equinoxPostingDirectory}/${buildLabel}/index.php" />
		<!--  Insert ftp url for drop directory  -->
		<replace file="${equinoxPostingDirectory}/${buildLabel}/index.php" token="@buildlabel@" value="${buildLabel}" />
	</target>

	<!-- ===================================================================== -->
	<!-- Helper targets -->
	<!-- ===================================================================== -->
	<target name="updateTestManifest">
		<apply executable="ls" output="${buildDirectory}/${bundle.id}.txt" dir="${buildDirectory}/${buildLabel}">
			<fileset dir="${buildDirectory}/${buildLabel}">
				<patternset>
					<include name="${bundle.id}_*.jar"/>
				</patternset>
			</fileset>
		</apply>
		<replaceregexp file="${buildDirectory}/${bundle.id}.txt" match="/.+/" replace=""/>
		<replaceregexp file="${buildDirectory}/${bundle.id}.txt" match="\.jar" replace=""/>
		<replaceregexp file="${buildDirectory}/${bundle.id}.txt" match="\n" replace=""/>
		<loadfile property="bundle.jar" srcFile="${buildDirectory}/${bundle.id}.txt" failonerror="off"/>
		<delete file="${buildDirectory}/${bundle.id}.txt" failonerror="false"/>
		<replace file="${builder}/../publishing/testManifest.xml" token="@${bundle.id}@" value="${bundle.jar}"/>
	</target>

	<!-- ===================================================================== -->
	<!-- Default target                                                        -->
	<!-- ===================================================================== -->
	<target name="noDefault">
		<echo message="You must specify a target when invoking this file" />
	</target>

</project>
