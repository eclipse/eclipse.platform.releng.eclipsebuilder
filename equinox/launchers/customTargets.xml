<project name="Build specific targets and properties" default="noDefault" basedir=".">

	<property name="postingDirectory" value="${buildDirectory}" />
	<property name="equinoxPostingDirectory" value="${postingDirectory}/../../equinox/drops" />

	<!-- ===================================================================== -->
	<!-- Run a given ${target} on all elements being built -->
	<!-- ===================================================================== -->
	<target name="allElements">
		<ant antfile="${genericTargets}" target="${target}">
			<property name="type" value="feature" />
			<property name="id" value="master-root" />
		</ant>
	</target>

	<!-- ===================================================================== -->
	<!-- Targets to assemble the built elements for particular configurations  -->
	<!-- These generally call the generated assemble scripts (named in -->
	<!-- ${assembleScriptName}) but may also add pre and post processing -->
	<!-- Add one target for each root element and each configuration -->
	<!-- ===================================================================== -->
	<target name="assemble.master-root.equinox-launcher-linux.gtk.x86">
		<property name="archiveName" value="launchers-linux.gtk.x86.${buildId}.tar.gz" />
		<antcall target="assemble" />
	</target>
	<target name="assemble.master-root.equinox-launcher-win32.win32.x86">
		<property name="archiveName" value="launchers-win32.win32.x86.${buildId}.zip" />
		<antcall target="assemble" />
	</target>
	<target name="assemble.master-root.equinox-launcher-linux.gtk.x86_64">
		<property name="archiveName" value="launchers-linux.gtk.x86_64.${buildId}.tar.gz" />
		<antcall target="assemble" />
	</target>
	<target name="assemble.master-root.equinox-launcher-linux.gtk.ppc">
		<property name="archiveName" value="launchers-linux.gtk.ppc.${buildId}.tar.gz" />
		<antcall target="assemble" />
	</target>
	<target name="assemble.master-root.equinox-launcher-linux.motif.x86">
		<property name="archiveName" value="launchers-linux.motif.x86.${buildId}.tar.gz" />
		<antcall target="assemble" />
	</target>
	<target name="assemble.master-root.equinox-launcher-solaris.motif.sparc">
		<property name="archiveName" value="launchers-solaris.motif.sparc.${buildId}.zip" />
		<antcall target="assemble" />
	</target>
	<target name="assemble.master-root.equinox-launcher-solaris.gtk.sparc">
		<property name="archiveName" value="launchers-solaris.gtk.sparc.${buildId}.zip" />
		<antcall target="assemble" />
	</target>
	<target name="assemble.master-root.equinox-launcher-aix.motif.ppc">
		<property name="archiveName" value="launchers-aix.motif.ppc.${buildId}.zip" />
		<antcall target="assemble" />
	</target>
	<target name="assemble.master-root.equinox-launcher-hpux.motif.PA_RISC">
		<property name="archiveName" value="launchers-hpux.motif.PA_RISC.${buildId}.zip" />
		<antcall target="assemble" />
	</target>
	<target name="assemble.master-root.equinox-launcher-macosx.carbon.ppc">
		<property name="archiveName" value="launchers-macosx.carbon.ppc.${buildId}.tar.gz" />
		<antcall target="assemble" />
	</target>

	<target name="assemble">
		<mkdir dir="${equinoxPostingDirectory}/${buildLabel}/checksum" />
		<property name="archiveFullPath" value="${equinoxPostingDirectory}/${buildLabel}/${archiveName}" />
		<ant antfile="${assembleScriptName}" />
		<checksum file="${archiveFullPath}" property="md5" />
		<echo message="${md5} *${archiveName}" file="${equinoxPostingDirectory}/${buildLabel}/checksum/${archiveName}.md5" />
	</target>

	<!-- ===================================================================== -->
	<!-- Check out map files from correct repository -->
	<!-- Replace values for cvsRoot, package and mapVersionTag as desired. -->
	<!-- ===================================================================== -->
	<target name="getMapFiles">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before setup -->
	<!-- ===================================================================== -->
	<target name="preSetup">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after setup but before starting the build proper -->
	<!-- ===================================================================== -->
	<target name="postSetup">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="preFetch">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the fetch -->
	<!-- ===================================================================== -->
	<target name="postFetch">
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.osgi" />
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.osgi.util" />
		</antcall>
		<antcall target="updateTestManifest">
			<param name="bundle.id" value="org.eclipse.osgi.services" />
		</antcall>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before generating build scripts -->
	<!-- ===================================================================== -->
	<target name="preGenerate">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after generating the build scripts -->
	<!-- ===================================================================== -->
	<target name="postGenerate">
	</target>


	<!-- ===================================================================== -->
	<!-- Steps to do before assembling -->
	<!-- ===================================================================== -->
	<target name="preAssemble">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after assembling-->
	<!-- ===================================================================== -->
	<target name="postAssemble">
		<exec executable="unzip" dir="${basedir}">
			<arg line="-j ${postingDirectory}/${buildLabel}/eclipse-platform-${buildId}-win32.zip eclipse/plugins/org.eclipse.osgi* -d ${equinoxPostingDirectory}/${buildLabel}"/>
		</exec>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="preProcess">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="postProcess">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after everything is built and assembled -->
	<!-- (e.g., testing, posting, emailing, ...) -->
	<!-- ===================================================================== -->
	<target name="postBuild">
		<available classname="org.eclipse.releng.generators.EclipseTestResultsGenerator" property="class" value="org.eclipse.releng.generators.EclipseTestResultsGenerator" />
		<!--post clickThroughs-->
		<copy todir="${equinoxpostingDirectory}/${buildLabel}">
			<fileset dir="${buildDirectory}/maps/org.eclipse.releng" includes="clickThroughs/" />
		</copy>

		<copy todir="${equinoxpostingDirectory}/${buildLabel}">
			<fileset dir="${postingDirectory}/${buildLabel}" includes="compilelogs/plugins/org.eclipse.osgi/**" />
		</copy>

		<!--post directory.txt-->
		<copy file="${buildDirectory}/directory.txt" todir="${equinoxpostingDirectory}/${buildLabel}" />

		<!--regenerate the index page with links to test results-->
		<ant antfile="${base.builder}/org.eclipse.build.tools/scripts/publish.xml" target="generateIndex">
			<property name="isBuildTested" value="false" />
			<property name="dropTokenList" value="%bundles%,%launchers%" />
			<property name="result" value="${equinoxpostingDirectory}/${buildLabel}" />
			<property name="compileLogsDirectoryName" value="${equinoxpostingDirectory}/${buildLabel}/compilelogs" />
			<property name="indexFileName" value="index.php" />
			<property name="xmlDirectoryName" value="${postingDirectory}/testresults/xml" />
			<property name="dropDirectoryName" value="${equinoxpostingDirectory}/${buildLabel}" />
			<property name="testResultsTemplateFileName" value="${builder}/publishing/templateFiles/testResults.php.template" />
			<property name="dropTemplateFileName" value="${builder}/publishing/templateFiles/index.html.template" />
			<property name="testResultsHtmlFileName" value="testResults.php" />
			<property name="hrefTestResultsTargetPath" value="testresults/html" />
			<property name="hrefCompileLogsTargetPath" value="../../../../../downloads/drops/${buildLabel}/compilelogs" />
			<property name="compileLogsDirectoryName" value="${result}/compilelogs" />
			<property name="testManifestFileName" value="${builder}/publishing/testManifest.xml" />
		</ant>
		<!--  Insert ftp url for drop directory  -->
		<replace file="${equinoxpostingDirectory}/${buildLabel}/index.php" token="@buildlabel@" value="${buildLabel}" />
	</target>

	<!-- ===================================================================== -->
	<!-- Helper targets -->
	<!-- ===================================================================== -->
	<target name="updateTestManifest">
		<!--update bundle names in the testManifest-->
		<property file="${buildDirectory}/plugins/${bundle.id}/META-INF/MANIFEST.MF"/>
		<replace file="${builder}/../publishing/testManifest.xml" token="@${bundle.id}@" value="org.eclipse.osgi_${Bundle-Version}"/>
	</target>
	
	<!-- ===================================================================== -->
	<!-- Default target                                                        -->
	<!-- ===================================================================== -->
	<target name="noDefault">
		<echo message="You must specify a target when invoking this file" />
	</target>

</project>
