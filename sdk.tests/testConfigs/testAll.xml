<project default="default">

	<!--
	A common directory to all running builds which stores files called markers.
	marker files contain a key value which hold the name of a test machine which is in use.
	marker files are read by the <findMachine> custom Ant task in conjunction with the testmachines.cfg
	file to find an free test machine.
	-->
	<property name="markerContainer" value="/home/users/releng/buildTools/markers" />
	<property name="cfg" value="testmachines.cfg" />
	<property name="test.xml" value="${basedir}/../../../org.eclipse.releng.basebuilder/plugins/org.eclipse.build.tools/scripts/test.xml" />


	<target name="default">
		<parallel>
			<antcall target="runtests">
				<param name="testconfig" value="linux.gtk.x86-sun142_06" />
			</antcall>
			<antcall target="runtests">
				<param name="testconfig" value="win32.win32.x86-sun142_06" />
			</antcall>
		</parallel>
	</target>

	<target name="performanceTests">
		<property name="testresults" value="${postingDirectory}/${buildId}/performance" />
		<property name="performance.test" value="true"/>
		<parallel>
			<antcall target="runtests">
				<param name="testconfig" value="linux.gtk.x86-sun142_06-perf" />
			</antcall>
			<antcall target="runtests">
				<param name="testconfig" value="win32.win32.x86-sun142_06-perf" />
			</antcall>
		</parallel>
		<antcall target="generatePerformanceResults">
			<param name="resultType" value="-fingerprints" />
		</antcall>
	</target>

	<target name="runtest">
		<property file="${basedir}/${testconfig}/testing.properties" />
		<property name="testResults" value="${postingDirectory}/${buildLabel}/testresults" />
		<mkdir dir="${testResults}" />

		<property name="markerName" value="${buildId}.${testconfig}.${target}" />
		<!--find a free machine to use for testing-->
		<findMachine cfg="${cfg}" markerContainer="${markerContainer}" cfgKey="${testconfig}" markerName="${markerName}" waitInterval="30" />
		<property file="${markerContainer}/${markerName}.marker" />
		<property name="testMachine" value="${0}" />

		<property name="consolelog" value="${target}.${testconfig}.txt" />
		<!--run the test-->
		<ant antfile="${test.xml}">
			<property name="tester" value="${basedir}/${testconfig}" />
			<property name="args" value="${executionDir} ${target} ${consolelog}" />
		</ant>
		<delete file="${markerContainer}/${markerName}.marker" />
		<antcall target="generatePerformanceResults">
			<param name="resultType" value="-dimensiongraphs -dimensiontables" />
		</antcall>
	</target>

	<target name="runtests">
		<!--list tests to run in parallel here-->
		<parallel>
			<antcall target="runtest">
				<param name="target" value="ant" />
			</antcall>
			<!--antcall target="runtest">
				<param name="target" value="antui" />
			</antcall>
			<antcall target="runtest">
				<param name="target" value="compare" />
			</antcall>
			<antcall target="runtest">
				<param name="target" value="core" />
			</antcall>
			<antcall target="runtest">
				<param name="target" value="coreexpressions" />
			</antcall>
			<antcall target="runtest">
				<param name="target" value="filebuffers" />
			</antcall>
			<antcall target="runtest">
				<param name="target" value="help" />
			</antcall>
			<antcall target="runtest">
				<param name="target" value="jdtcorebuilder" />
			</antcall>
			<antcall target="runtest">
				<param name="target" value="jdtcorecompiler" />
			</antcall>
			<antcall target="runtest">
				<param name="target" value="jdtcoremodel" />
			</antcall>
			<antcall target="runtest">
				<param name="target" value="jdtcoreperf" />
			</antcall>
			<antcall target="runtest">
				<param name="target" value="jdtdebug" />
			</antcall>
			<antcall target="runtest">
				<param name="target" value="jdttext" />
			</antcall>
			<antcall target="runtest">
				<param name="target" value="jdtui" />
			</antcall>
			<antcall target="runtest">
				<param name="target" value="jdtuirefactoring" />
			</antcall>
			<antcall target="runtest">
				<param name="target" value="jface" />
			</antcall>
			<antcall target="runtest">
				<param name="target" value="ltkcorerefactoringtests" />
			</antcall>
			<antcall target="runtest">
				<param name="target" value="ltkuirefactoringtests" />
			</antcall-->
			<antcall target="runtest">
				<param name="target" value="pdeui" />
			</antcall>
			<!--antcall target="runtest">
				<param name="target" value="relEng" />
			</antcall>
			<antcall target="runtest">
				<param name="target" value="swt" />
			</antcall>
			<antcall target="runtest">
				<param name="target" value="teamcore" />
			</antcall>
			<antcall target="runtest">
				<param name="target" value="teamcvs" />
			</antcall>
			<antcall target="runtest">
				<param name="target" value="text" />
			</antcall>
			<antcall target="runtest">
				<param name="target" value="uieditors" />
			</antcall-->
			<antcall target="runtest">
				<param name="target" value="ui" />
			</antcall>
			<antcall target="runtest">
				<param name="target" value="uircp" />
			</antcall>
			<!--antcall target="runtest">
				<param name="target" value="uiworkbenchtexteditor" />
			</antcall-->
			<antcall target="runtest">
				<param name="target" value="update" />
			</antcall>
		</parallel>
	</target>

	<target name="generatePerformanceResults" if="performance.test">
		<!--location of properties file containing last 
		performance reference test information and performance config desciptions.
		See win32.win32.x86-sun142_06-perf/perf.config.sample for example.-->
		<property name="config.properties" value="/home/users/releng/buildTools/eclipse.perf/config.properties" />
		<property file="${config.properties}" />

		<!--default scenarioFilter-->
		<property name="scenarioFilter" value="org.eclipse.%.test" />

		<java classname="org.eclipse.test.performance.ui.Main" fork="true" maxmemory="256m">
			<arg line="
					 -baseline ${eclipse.perf.ref}
					 -current ${buildId}
					 -jvm ${eclipse.perf.jvm}
					 -fp.output ${fp.output}
					 -config ${config}
					 -config.properties ${eclipse.perf.config.descriptors}
					 -scenario.filter ${scenarioFilter}
				     ${resultType}" />

			<classpath>
				<fileset dir="${basedir}">
					<include name="plugins/Cloudscape/*.jar" />
				</fileset>
				<fileset dir="${basedir}/..">
					<include name="org.eclipse.releng.basebuilder/plugins/**/*.jar" />
					<exclude name="org.eclipse.releng.basebuilder/plugins/*swt.win32*/**/*.jar" />
				</fileset>
			</classpath>

			<env key="LD_LIBRARY_PATH" value="${basedir}/../org.eclipse.releng.basebuilder" />
			<sysproperty key="java.library.path" value="${basedir}/../org.eclipse.releng.basebuilder/plugins/org.eclipse.swt.motif_3.1.0/os/linux/x86" />
			<sysproperty key="eclipse.perf.dbloc" value="${dbloc}" />
		</java>
	</target>
</project>