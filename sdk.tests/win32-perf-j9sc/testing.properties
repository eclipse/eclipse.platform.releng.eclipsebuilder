#target to call in test.xml:  runtests-local | runtests-remote
testTarget=runtests-remote

#use rsh as protocol for login and copying files.
rsh=true

#directory on test machine where automated testing framework will be installed
testDir=c:\\buildtest\\${buildLabel}

#name of zip file containing automated testing framework and JUnit test plug-ins
testFramework=eclipse-Automated-Tests-${buildId}.zip

#name of runtime to install and test
runtime=eclipse-SDK-${buildId}-win32.zip

#directory where test scripts are launched
executionDir=${testDir}\\eclipse-testing

#eclipse platforms:  win32 | linux-motif | linux-gtk | aix-motif | hpux-motif |solaris-motif
platform=winxp_perf

#name of file that captures console output from running JUnit plug-in tests
consolelog=winxp_perf_consolelog.txt

#name of script to execute on remote machine
testScript=${executionDir}\\testAll.bat

#arguments to $(testScript)
args=${executionDir} winxpsc_perf_consolelog.txt ${buildId}

#name and path to downloaded vm.
vmDest=ibm-java2-ws-sdk-pj9n142-20040928a.zip

#name and path to downloaded jxe.
jxeDest=jxesupport-1.3.6.zip

#cvsroot
cvsRoot=:pserver:anonymous@ottcvs1:/home/cvs/releng

#URL to vm used to run tests
vmUrl=jdks/${vmDest}

#URL to vm used to run tests
jxeUrl=jdks/${jxeDest}

#command to execute via rsh to install the vm
vmInstallCommand="unzip -o -qq ${testDir}\\${vmDest} -d ${testDir}"

#command to extract the jxe
jxeInstallCommand="unzip -o -qq ${testDir}\\${jxeDest} -d ${executionDir}"

#Ant property to set default vm installation
skipVmInstall=true

#extra binaries directory relative to testConfigs directory
extraBinariesDir=../../../eclipseInternalBuildTools/bin/windowsBin

#Cloudscape plug-in location
internalPlugins=../../../eclipseInternalBuildTools/plugins