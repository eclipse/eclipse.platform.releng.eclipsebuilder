<project name="Helper targets" default="noDefault">
	<property name="postingDirectory" value="${buildDirectory}" />
	<property name="publishingContent" value="${eclipse.build.configs}/../publishingFiles" />

	<!-- ===================================================================== -->
	<!-- Set of helper targets for building the Eclipse SDK -->
	<!-- ===================================================================== -->
	<target name="discoverOS">
		<condition property="onUnix">
			<and>
				<os family="unix" />
			</and>
		</condition>
		<condition property="onWindows">
			<and>
				<os family="windows" />
			</and>
		</condition>
	</target>

	<target name="printWarnings" if="onWindows" depends="discoverOS">
		<echo message="The UNIX versions of your build output will be invalid.  Windows will not preserve symbolic links and permissions on executable files." />
	</target>

	<target name="setLabels">
		<!--required-->
		<!-- setup the label.properties file packaged in the source builds. -->
		<!--Set this property to empty string-->
		<property name="buildType" value="" />
		<tstamp>
			<format property="TODAY" pattern="MMMM d, yyyy" />
			<format property="TSTAMP" pattern="HHmm" />
		</tstamp>
		<copy file="label.properties.template" tofile="${buildDirectory}/label.properties" overwrite="true" />
		<replace file="${buildDirectory}/label.properties" token="@builddate@" value="${TODAY}" />
		<replace file="${buildDirectory}/label.properties" token="@buildtype@" value="${buildType}" />
		<replace file="${buildDirectory}/label.properties" token="@ds@" value="${timestamp}" />
		<replace file="${buildDirectory}/label.properties" token="@buildid@" value="${buildId}" />
	</target>


	<target name="buildStandAloneSWT">
		<parallel failonany="true">
			<sequential>
				<antcall target="packageSwtStandalone">
					<param name="ws" value="win32" />
					<param name="os" value="win32" />
					<param name="arch" value="x86" />
				</antcall>
				<antcall target="packageSwtStandalone">
					<param name="ws" value="win32" />
					<param name="os" value="win32" />
					<param name="arch" value="x86_64" />
				</antcall>
			</sequential>
		</parallel>
		<parallel failonany="true">
			<sequential>
				<antcall target="packageSwtStandalone">
					<param name="os" value="linux" />
					<param name="ws" value="motif" />
					<param name="arch" value="x86" />
				</antcall>
				<antcall target="packageSwtStandalone">
					<param name="os" value="aix" />
					<param name="ws" value="motif" />
					<param name="arch" value="ppc" />
				</antcall>
				<antcall target="packageSwtStandalone">
					<param name="os" value="aix" />
					<param name="ws" value="gtk" />
					<param name="arch" value="ppc64" />
				</antcall>
			</sequential>
		</parallel>
		<parallel failonany="true">
			<sequential>
				<antcall target="packageSwtStandalone">
					<param name="os" value="solaris" />
					<param name="ws" value="motif" />
					<param name="arch" value="sparc" />
				</antcall>
				<antcall target="packageSwtStandalone">
					<param name="os" value="solaris" />
					<param name="ws" value="gtk" />
					<param name="arch" value="sparc" />
				</antcall>
				<antcall target="packageSwtStandalone">
					<param name="os" value="solaris" />
					<param name="ws" value="gtk" />
					<param name="arch" value="x86" />
				</antcall>
				<antcall target="packageSwtStandalone">
					<param name="os" value="hpux" />
					<param name="ws" value="motif" />
					<param name="arch" value="ia64_32" />
				</antcall>
				<antcall target="packageSwtStandalone">
					<param name="os" value="qnx" />
					<param name="ws" value="photon" />
					<param name="arch" value="x86" />
				</antcall>
			</sequential>
		</parallel>
		<parallel failonany="true">
			<sequential>
				<antcall target="packageSwtStandalone">
					<param name="os" value="linux" />
					<param name="ws" value="gtk" />
					<param name="arch" value="x86" />
				</antcall>
				<antcall target="packageSwtStandalone">
					<param name="os" value="macosx" />
					<param name="ws" value="carbon" />
					<param name="arch" value="" />
				</antcall>
				<antcall target="packageSwtStandalone">
					<param name="os" value="macosx" />
					<param name="ws" value="cocoa" />
					<param name="arch" value="" />
				</antcall>
				<antcall target="packageSwtStandalone">
					<param name="os" value="macosx" />
					<param name="ws" value="cocoa" />
					<param name="arch" value="x86_64" />
				</antcall>
				<antcall target="packageSwtStandalone">
					<param name="os" value="linux" />
					<param name="ws" value="gtk" />
					<param name="arch" value="x86_64" />
				</antcall>
				<antcall target="packageSwtStandalone">
					<param name="os" value="linux" />
					<param name="ws" value="gtk" />
					<param name="arch" value="ppc" />
				</antcall>
				<antcall target="packageSwtStandalone">
					<param name="os" value="linux" />
					<param name="ws" value="gtk" />
					<param name="arch" value="ppc64" />
				</antcall>
			</sequential>
		</parallel>

		<available property="org.eclipse.swt.win32.wce_ppc.arm.exists" file="${buildDirectory}/plugins/org.eclipse.swt.win32.wce_ppc.arm" type="dir" />
		<antcall target="fetch_org.eclipse.swt.win32.wce_ppc.arm" />

		<antcall target="packageSwtStandalone">
			<param name="ws" value="win32" />
			<param name="os" value="wce_ppc" />
			<param name="arch" value="arm" />
			<param name="skipChecksum" value="true" />
		</antcall>
		<antcall target="generateChecksum">
			<param name="downloadFile" value="swt-${buildId}-win32-wce_ppc-arm-j2se.zip" />
			<param name="archiveFullPath" value="${postingDirectory}/${buildLabel}/swt-${buildId}-win32-wce_ppc-arm-j2se.zip" />
		</antcall>
		<antcall target="generateChecksum">
			<param name="downloadFile" value="swt-${buildId}-win32-wce_ppc-arm-j2me.zip" />
			<param name="archiveFullPath" value="${postingDirectory}/${buildLabel}/swt-${buildId}-win32-wce_ppc-arm-j2me.zip" />
		</antcall>

	</target>

	<target name="fetch_org.eclipse.swt.win32.wce_ppc.arm" unless="org.eclipse.swt.win32.wce_ppc.arm.exists">
		<!--need to check out -->
		<property name="featureOnly" value="false" />
		<property name="featureAndPlugins" value="true" />
		<property name="featuresRecursively" value="false" />
		<ant antfile="genericTargets.xml" dir="${eclipse.pdebuild.scripts}" target="fetchElement">
			<property name="type" value="fragment" />
			<property name="id" value="org.eclipse.swt.win32.wce_ppc.arm" />
		</ant>
	</target>

	<target name="packageSwtStandalone">
		<condition property="downloadFile" value="swt-${buildid}-${ws}-${os}.zip">
			<equals arg1="${arch}" arg2="" />
		</condition>
		<property name="downloadFile" value="swt-${buildid}-${ws}-${os}-${arch}.zip" />
		<property name="destination" value="${postingDirectory}/${buildLabel}" />
		<property name="archiveFullPath" value="${destination}/${downloadFile}" />

		<condition property="swtdir" value="${buildDirectory}/plugins/org.eclipse.swt.${ws}.${os}">
			<equals arg1="${arch}" arg2="" />
		</condition>

		<property name="swtdir" value="${buildDirectory}/plugins/org.eclipse.swt.${ws}.${os}.${arch}" />
		<ant antfile="build.xml" target="swtdownload" dir="${swtdir}">
		</ant>

		<antcall target="generateChecksum" />
	</target>

	<target name="generateChecksum" unless="skipChecksum">
		<checksum file="${archiveFullPath}" property="md5" />
		<checksum file="${archiveFullPath}" property="sha" />
		<echo message="${md5} *${downloadFile}" file="${postingDirectory}/${buildLabel}/checksum/${downloadFile}.md5" />
		<echo message="${sha} *${downloadFile}" file="${postingDirectory}/${buildLabel}/checksum/${downloadFile}.sha1" />
	</target>

	<target name="publish" description="Preparing to post the build...">
		<!--post clickThroughs-->
		<copy todir="${postingDirectory}/${buildLabel}">
			<fileset dir="${buildDirectory}/maps/org.eclipse.releng" includes="clickThroughs/" />
		</copy>

		<!--post directory.txt-->
		<copy file="${buildDirectory}/directory.txt" todir="${postingDirectory}/${buildLabel}" />

		<!--post instructions on automated testing-->
		<copy file="${eclipse.build.configs}/sdk.tests/testScripts/readme.html" tofile="${postingDirectory}/${buildLabel}/automatedtesting.html" />
		<copy file="${buildDirectory}/plugins/org.eclipse.test/testframework.html" tofile="${postingDirectory}/${buildLabel}/testframework.html" />

		<antcall target="generateEclipseIndex" />

		<!--get static files required in the buildLabel directory-->
		<copy todir="${postingDirectory}/${buildLabel}">
			<fileset dir="${publishingContent}/staticDropFiles" />
		</copy>

		<!--copy buildnotes from plugin directories-->
		<mkdir dir="${postingDirectory}/${buildLabel}/buildnotes" />
		<copy todir="${postingDirectory}/${buildLabel}/buildnotes" flatten="true">
			<fileset dir="${buildDirectory}/plugins" includes="**/buildnotes_*.html,**/buildnotes_*.htm,**/jdt_core_style.css" />
		</copy>

		<!--copy javadoc logs-->
		<copy file="${buildDirectory}/plugins/org.eclipse.platform.doc.isv/doc.bin.log" tofile="${postingDirectory}/${buildLabel}/compilelogs/platform.doc.isv.javadoc.txt" failonerror="false" />
		<copy file="${buildDirectory}/plugins/org.eclipse.jdt.doc.isv/doc.bin.log" tofile="${postingDirectory}/${buildLabel}/compilelogs/jdt.doc.isv.javadoc.txt" failonerror="false" />
		<copy file="${buildDirectory}/plugins/org.eclipse.jdt.doc.isv/jdtapt.doc.bin.log" tofile="${postingDirectory}/${buildLabel}/compilelogs/jdt.apt.javadoc.txt" failonerror="false" />
		<copy file="${buildDirectory}/plugins/org.eclipse.pde.doc.user/doc.bin.log" tofile="${postingDirectory}/${buildLabel}/compilelogs/pde.doc.user.javadoc.txt" failonerror="false" />
		<copy file="${buildDirectory}/plugins/org.eclipse.platform.doc.isv/platformconvert.txt" tofile="${postingDirectory}/${buildLabel}/compilelogs/platform.doc.isv.schema.txt" failonerror="false" />
		<copy file="${buildDirectory}/plugins/org.eclipse.jdt.doc.isv/jdtconvert.txt" tofile="${postingDirectory}/${buildLabel}/compilelogs/jdt.doc.isv.schema.txt" failonerror="false" />
		<copy file="${buildDirectory}/plugins/org.eclipse.pde.doc.user/pdeconvert.txt" tofile="${postingDirectory}/${buildLabel}/compilelogs/pde.doc.user.schema.txt" failonerror="false" />

	</target>


	<!-- ===================================================================== -->
	<!-- Target used to test the build                                         -->
	<!-- ===================================================================== -->
	<target name="testAll" unless="skip.tests">
		<waitfor maxwait="4" maxwaitunit="hour" checkevery="1" checkeveryunit="minute">
			<and>
				<available file="${postingDirectory}/${buildLabel}/checksum/eclipse-Automated-Tests-${buildId}.zip.md5" />
				<available file="${postingDirectory}/${buildLabel}/checksum/eclipse-SDK-${buildId}-win32.zip.md5" />
				<available file="${postingDirectory}/${buildLabel}/checksum/eclipse-SDK-${buildId}-linux-gtk.tar.gz.md5" />
				<available file="${postingDirectory}/${buildLabel}/checksum/eclipse-SDK-${buildId}-macosx-cocoa.tar.gz.md5" />
				<available file="${postingDirectory}/${buildLabel}/checksum/eclipse-${buildId}-delta-pack.zip.md5" />
				<available file="${postingDirectory}/${buildLabel}/checksum/eclipse-platform-${buildId}-win32.zip.md5" />
				<available file="${postingDirectory}/${buildLabel}/checksum/eclipse-platform-${buildId}-linux-gtk.tar.gz.md5" />
				<available file="${postingDirectory}/${buildLabel}/checksum/eclipse-platform-${buildId}-macosx-cocoa.tar.gz.md5" />
			</and>
		</waitfor>

		<property name="cvstest.properties" value="${base.builder}/../eclipseInternalBuildTools/cvstest.properties" />
		<antcall target="configure.team.cvs.test" />

		<!--replace buildid in vm.properties for JVM location settings-->
		<replace dir="${eclipse.build.configs}/sdk.tests/testConfigs" token="@buildid@" value="${buildId}" includes="**/vm.properties" />

		<antcall target="addnoperfmarker" />

		<parallel>
			<antcall target="test-JUnit" />
			<antcall target="test-performance" />
		</parallel>
	</target>

	<target name="addnoperfmarker" if="skip.performance.tests">
		<mkdir dir="${postingDirectory}/${buildLabel}/noperf" />
	</target>

	<target name="test-JUnit">
		<echo message="Starting tests." />
		<property name="dropLocation" value="${postingDirectory}" />
		<ant antfile="testAll.xml" dir="${eclipse.build.configs}/sdk.tests/testConfigs" />

		<antcall target="generateEclipseIndex" />

		<!--copy the test results and new index page to the posting location-->
		<copy todir="${postingDirectory}/${buildLabel}" overwrite="true">
			<fileset dir="${buildDirectory}/${buildLabel}" includes="testresults/**,*.php" />
		</copy>
		<replace file="${postingDirectory}/${buildLabel}/testResults.php" token="@build@" value="${buildId}" />

	</target>

	<!-- ===================================================================== -->
	<!-- Target used to test the build                                         -->
	<!-- ===================================================================== -->
	<target name="test-performance" unless="skip.performance.tests">

		<echo message="Starting performance tests." />
		<property name="dropLocation" value="${postingDirectory}" />
		<ant antfile="testAll.xml" dir="${eclipse.build.configs}/sdk.tests/testConfigs" target="performanceTests" />
		<antcall target="generatePerformanceResults" />
	</target>

	<!-- ===================================================================== -->
	<!-- Helper targets                                                        -->
	<!-- ===================================================================== -->
	<target name="mail" unless="noMail">
		<!-- helper target for sending email messages related to build. -->
		<mail mailhost="${host}" from="${sender}" tolist="${recipients}" subject="[eclipse-build] ${buildId}: ${subject}" message="${message}" failonerror="false" />
	</target>

	<target name="configure.team.cvs.test" unless="test.xml.tmp" if="cvstest.properties">
		<copy file="${eclipse.build.configs}/sdk.tests/testScripts/test.xml" tofile="${eclipse.build.configs}/sdk.tests/testScripts/test.xml.tmp" />
		<replace file="${eclipse.build.configs}/sdk.tests/testScripts/test.xml" propertyFile="${cvstest.properties}">
			<replacefilter token="${cvs_user}" property="cvs_user" />
			<replacefilter token="${cvs_password}" property="cvs_password" />
			<replacefilter token="${cvs_host}" property="cvs_host" />
			<replacefilter token="${cvs_root}" property="cvs_root" />
		</replace>
		<delete file="${eclipse.build.configs}/sdk.tests/testScripts/test.xml.tmp" />
	</target>

	<target name="generateEclipseIndex">
		<condition property="generatorClass" value="org.eclipse.releng.generators.EclipseTestResultsGeneratorNoMail">
			<equals arg1="${hudson}" arg2="true" />
		</condition>
		<property name="generatorClass" value="org.eclipse.releng.generators.EclipseTestResultsGenerator" />

		<available classname="${generatorClass}" property="class" value="${generatorClass}" />

		<!--regenerate the index page with links to test results-->
		<ant antfile="${base.builder}/plugins/org.eclipse.build.tools/scripts/publish.xml" dir="${publishingContent}" target="generateIndex">
			<property name="isBuildTested" value="true" />
			<property name="buildType" value="${buildType}" />
			<property name="dropTokenList" value="%sdk%,%tests%,%example%,%rcpruntime%,%rcpsdk%,%deltapack%,%icubase%,%runtime%,%platformsdk%,%jdt%,%jdtsdk%,%jdtc%,%jarprocessor%,%pde%,%pdesdk%,%cvs%,%cvssdk%,%swt%,%relengtools%" />
			<property name="platformIdentifierToken" value="%platform%" />
			<property name="platformSpecificTemplateList" value="Windows,${publishingContent}/templateFiles/platform.php.template,winPlatform.php;Linux,${publishingContent}/templateFiles/platform.php.template,linPlatform.php;Solaris,${publishingContent}/templateFiles/platform.php.template,solPlatform.php;AIX,${publishingContent}/templateFiles/platform.php.template,aixPlatform.php;Macintosh,${publishingContent}/templateFiles/platform.php.template,macPlatform.php;HP-UX,${publishingContent}/templateFiles/platform.php.template,hpuxPlatform.php;Source Build,${publishingContent}/templateFiles/sourceBuilds.php.template,sourceBuilds.php" />
			<property name="indexFileName" value="index.php" />
			<property name="result" value="${postingDirectory}/${buildLabel}" />
			<property name="testResultsTemplateFileName" value="${publishingContent}/templateFiles/testResults.php.template" />
			<property name="dropTemplateFileName" value="${publishingContent}/templateFiles/index.php.template" />
			<property name="testManifestFileName" value="${publishingContent}/testManifest.xml" />
		</ant>

		<!--  Replace build label in generated html files -->
		<replace dir="${postingDirectory}/${buildLabel}" token="@buildlabel@" value="${buildLabel}" includes="**/*.php" />

	</target>

	<target name="generatePerformanceResults">
		<mkdir dir="${buildDirectory}/${buildLabel}/performance" />
		<mkdir dir="${postingDirectory}/${buildLabel}/performance" />
		<taskdef name="performanceResults" classname="org.eclipse.releng.performance.PerformanceResultHtmlGenerator" />
		<condition property="configArgs" value="-ws gtk -arch ppc">
			<equals arg1="${os.arch}" arg2="ppc64" />
		</condition>
		<condition property="configArgs" value="-ws gtk -arch x86">
			<equals arg1="${os.arch}" arg2="i386" />
		</condition>
		<property name="configArgs" value="" />

		<java jar="${basedir}/../org.eclipse.releng.basebuilder/plugins/org.eclipse.equinox.launcher.jar" fork="true" maxmemory="512m" error="${buildlogs}/perfgenerror.txt" output="${buildlogs}/perfgenoutput.txt">
			<arg line="${configArgs} -consolelog -nosplash -data ${buildDirectory}/perf-workspace -application org.eclipse.test.performance.ui.resultGenerator
						-current ${buildId}
						-jvm ${eclipse.perf.jvm}
						-print					    
						-output ${postingDirectory}/${buildLabel}/performance/
						-config eplnx1,eplnx2,epwin2,epwin3
			            -dataDir ${postingDirectory}/../../data/v36
						-config.properties ${eclipse.perf.config.descriptors}
						-scenario.pattern org.eclipse.%.test%" />
			<!-- baselines arguments are no longer necessary since bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=209322 has been fixed...
						-baseline ${eclipse.perf.ref}
						-baseline.prefix R-3.4_200806172000
			-->
			<!-- add this argument to list above when there are milestone builds to highlight 
			-highlight.latest 3.3M1_
			-->
			<env key="LD_LIBRARY_PATH" value="${basedir}/../org.eclipse.releng.basebuilder" />
			<sysproperty key="eclipse.perf.dbloc" value="${dbloc}" />
		</java>

		<performanceResults xmlDirectoryName="${postingDirectory}/${buildLabel}/performance/xml" dropDirectoryName="${postingDirectory}/${buildLabel}" testResultsTemplateFileName="${publishingContent}/templateFiles/performance.php.template" testResultsHtmlFileName="performance/performance.php" hrefTestResultsTargetPath="html" testManifestFileName="${publishingContent}/performanceTestManifest.xml" />

		<replace file="${postingDirectory}/${buildLabel}/performance/performance.php" token="@buildType@" value="${buildType}" />
		<copy todir="/home/users/ecperf/data/" failonerror="false" overwrite="true">
			<fileset dir=" /builds/transfer/files/master/data/v36" />
		</copy>

	</target>

	<target name="verifyCompile" if="eclipse.running">
		<echo message="Checking for compile errors..." />
		<!--create html output for compile logs-->
		<eclipse.convert input="${postingDirectory}/${buildLabel}/compilelogs" validation="true" />
		<!-- Sends email to recipient list in monitor.properties with compile logs attached if errors found-->
		<verifyCompile install="${postingDirectory}/${buildLabel}/compilelogs" />
	</target>

	<target name="rSyncWithSnzZrh" unless="test">
		<!--copy drops to local directory for rsync with zrh-->
		<copy todir="/builds/transfer/files/zrh">
			<fileset dir="${postingDirectory}" includes="${buildLabel}/eclipse-SDK-*-win32.zip,${buildLabel}/eclipse-SDK-*-linux-*.tar.gz" excludes="${buildLabel}/eclipse-SDK-examples-*-win32.zip,${buildLabel}/eclipse-SDK-*-linux-gtk-x86_64.tar.gz,${buildLabel}/eclipse-SDK-*-linux-gtk-ppc.tar.gz,${buildLabel}/eclipse-SDK-*-linux-motif.tar.gz,${buildLabel}/eclipse-SDK-*-linux-gtk-s390.tar.gz,${buildLabel}/eclipse-SDK-*-linux-gtk-s390x.tar.gz,${buildLabel}/eclipse-SDK-*-linux-gtk-ppc64.tar.gz" />
		</copy>
	</target>
	<!-- ===================================================================== -->
	<!-- Default target                                                        -->
	<!-- ===================================================================== -->
	<target name="noDefault">
		<echo message="You must specify a target when invoking this file" />
	</target>

	<target name="cvsUp">
		<exec dir="." executable="/home/users/releng/cvsup/upload_snz.pl" />
		<cvsUp flagString="http://dev.eclipse.org/builds/snz_complete.flag" />
		<echo message="cvsUp complete." />
	</target>

	<target name="cleanSites" unless="skip.clean.sites">
		<cleanSite ageInMinutes="1440" directoryName="/builds/transfer/files/master/downloads/drops" realDelete="true" />
		<cleanSite ageInMinutes="1440" directoryName="/builds/transfer/files/master/equinox/drops" realDelete="true" />
		<cleanSite ageInMinutes="1440" directoryName="/builds/transfer/files/bogus/downloads/drops" realDelete="true" />
		<cleanSite ageInMinutes="1440" directoryName="/builds/transfer/files/bogus/equinox/drops" realDelete="true" />
		<cleanSite ageInMinutes="1440" directoryName="/builds/transfer/files/zrh" realDelete="true" />
		<cleanSite ageInMinutes="1440" directoryName="/builds/transfer/files/snz" realDelete="true" />
	</target>

</project>
