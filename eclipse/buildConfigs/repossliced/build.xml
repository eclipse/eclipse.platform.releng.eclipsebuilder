<project name="Build Repos" default="all" basedir=".">


	<target name="init">
		<property name="featureTempRoot" value="${eclipse.build.configs}/repossliced" />
		<property name="featureTempDir" value="featureTemp" />
		<property name="featureTemp" value="${featureTempRoot}/${featureTempDir}" />
		<property name="featureTemp2" value="${featureTempRoot}/featureTemp2" />
	</target>

	<target name="all" depends="init">
		<antcall target="cvs" />
		<antcall target="cvssource" />
		<antcall target="jdt" />
		<antcall target="jdtsource" />
		<antcall target="pde" />
		<antcall target="pdesource" />
		<antcall target="sdkexamples" />
		<antcall target="icubase" />
		<antcall target="relengtools" />
	</target>

	<target name="cvs">
		<property name="archiveRoot" value="eclipse-CVS-Client-${buildId}" />
		<buildRepos feature="org.eclipse.cvs" filter="true" archiveName="${archiveRoot}.zip" />
	</target>

	<target name="cvssource">
		<property name="archiveRoot" value="eclipse-CVS-Client-SDK-${buildId}" />
		<buildReposSource feature="org.eclipse.cvs" filter="true" archiveName="${archiveRoot}.zip" />
	</target>

	<target name="pde">
		<property name="archiveRoot" value="eclipse-PDE-${buildId}" />
		<buildRepos feature="org.eclipse.pde" filter="true" archiveName="${archiveRoot}.zip" />
	</target>

	<target name="pdesource">
		<property name="archiveRoot" value="eclipse-PDE-SDK-${buildId}" />
		<buildReposSource feature="org.eclipse.pde" filter="true" archiveName="${archiveRoot}.zip" />
	</target>

	<target name="jdt">
		<property name="archiveRoot" value="eclipse-JDT-${buildId}" />
		<buildRepos feature="org.eclipse.jdt" filter="true" archiveName="${archiveRoot}.zip" />
		<buildRepos feature="org.eclipse.jdt" filter="macosx,carbon,ppc" archiveName="${archiveRoot}-macosx.tar.gz" />
	</target>

	<target name="jdtsource">
		<property name="archiveRoot" value="eclipse-JDT-SDK-${buildId}" />
		<buildReposSource feature="org.eclipse.jdt" filter="true" archiveName="${archiveRoot}.zip" />
		<buildReposSource feature="org.eclipse.jdt" filter="macosx,carbon,ppc" archiveName="${archiveRoot}-macosx.tar.gz" />
	</target>

	<target name="sdkexamples">
		<property name="archiveRoot" value="eclipse-examples-${buildId}" />
		<buildRepos feature="org.eclipse.sdk.examples" filter="win32,win32,x86" archiveName="${archiveRoot}-win32.zip" />
		<buildRepos feature="org.eclipse.sdk.examples" filter="true" archiveName="${archiveRoot}.zip" />
	</target>

	<target name="icubase">
		<property name="archiveRoot" value="com.ibm.icu.base-${buildId}" />
		<buildRepos feature="com.ibm.icu.base" filter="true" archiveName="${archiveRoot}.zip" />
	</target>

	<target name="relengtools">
		<property name="archiveRoot" value="org.eclipse.releng.tools-${buildId}" />
		<buildRepos feature="org.eclipse.releng.tools" filter="true" archiveName="${archiveRoot}.zip" />
	</target>

	<macrodef name="buildReposSource">
		<attribute name="feature" />
		<attribute name="filter" />
		<attribute name="archiveName" />

		<sequential>
			<property name="runtimeIU" value="@{feature}.feature.group" />
			<property name="sdkIU" value="@{feature}.source.feature.group" />
			<delete dir="${featureTemp}" />
			<delete dir="${featureTemp2}" />
			<mkdir dir="${featureTemp}" />
			<mkdir dir="${featureTemp2}" />

			<p2.mirror source="file://${buildRepo}">
				<destination kind="metadata" location="file://${featureTemp}" name="@{feature} Repo" format="file://${buildRepo}" />
				<destination kind="artifact" location="file://${featureTemp}" name="@{feature} Repo" format="file://${buildRepo}" />
				<iu id="${runtimeIU}" version="" />
				<iu id="${sdkIU}" version="" />
				<slicingOptions platformFilter="@{filter}" includeOptional="false" includeNonGreedy="false" followStrict="true" />
			</p2.mirror>
			<p2.repo2runnable destination="${featureTemp2}/eclipse">
				<source dir="${featureTempRoot}" includes="${featureTempDir}" />
			</p2.repo2runnable>
			<delete>
				<fileset dir="${featureTemp2}/eclipse" includes="*.jar" />
			</delete>
			<!-- assemble compressed files and create checksums -->
			<antcall target="compress">
				<param name="archiveName" value="@{archiveName}" />
				<param name="dir" value="${featureTemp2}" />
			</antcall>
		</sequential>
	</macrodef>

	<macrodef name="buildRepos">
		<attribute name="feature" />
		<attribute name="filter" />
		<attribute name="archiveName" />

		<sequential>
			<property name="runtimeIU" value="@{feature}.feature.group" />
			<delete dir="${featureTemp}" />
			<delete dir="${featureTemp2}" />
			<mkdir dir="${featureTemp}" />
			<mkdir dir="${featureTemp2}" />
			<p2.mirror source="file://${buildRepo}">
				<destination kind="metadata" location="file://${featureTemp}" name="@{feature} Repo" format="file://${buildRepo}" />
				<destination kind="artifact" location="file://${featureTemp}" name="@{feature} Repo" format="file://${buildRepo}" />
				<iu id="${runtimeIU}" version="" />
				<slicingOptions platformFilter="@{filter}" includeOptional="false" includeNonGreedy="false" followStrict="true" />
			</p2.mirror>
			<p2.repo2runnable destination="${featureTemp2}/eclipse">
				<source dir="${featureTempRoot}" includes="${featureTempDir}" />
			</p2.repo2runnable>
			<delete>
				<fileset dir="${featureTemp2}/eclipse" includes="*.jar" />
			</delete>
			<!-- assemble compressed files and create checksums -->
			<antcall target="compress">
				<param name="archiveName" value="@{archiveName}" />
				<param name="dir" value="${featureTemp2}" />
			</antcall>
		</sequential>
	</macrodef>

	<target name="compress">
		<!-- set the target based on which OS we are running on since there
		is a difference between unzip and untar/gunzip -->
		<property name="archiveFullPath" value="${postingDirectory}/${buildLabel}/${archiveName}" />
		<condition property="compress.target" value="compress-zip">
			<contains string="${archiveName}" substring=".zip" />
		</condition>
		<condition property="compress.target" value="compress-tar.gz">
			<contains string="${archiveName}" substring=".tar.gz" />
		</condition>
		<antcall target="${compress.target}">
			<param name="dir" value="${featureTemp2}" />
			<param name="filename" value="${archiveName}" />
		</antcall>
		<antcall target="generateChecksums">
			<param name="archiveName" value="${archiveName}" />
		</antcall>
	</target>

	<target name="compress-zip">
		<exec dir="${dir}" executable="zip">
			<arg line="-q ${dir}/${filename} -r ." />
		</exec>
		<move file="${dir}/${filename}" tofile="${archiveFullPath}" />
	</target>

	<target name="compress-tar.gz">
		<exec dir="${dir}" executable="sh">
			<arg line='-c "tar -cvzf ${dir}/${filename} *"' />
		</exec>
		<move file="${dir}/${filename}" tofile="${archiveFullPath}" />
	</target>

	<target name="generateChecksums">
		<mkdir dir="${postingDirectory}/${buildLabel}/checksum" />
		<checksum file="${archiveFullPath}" property="md5" />
		<checksum file="${archiveFullPath}" algorithm="SHA" property="sha" />
		<parallel>
			<echo message="${md5} *${archiveName}" file="${postingDirectory}/${buildLabel}/checksum/${archiveName}.md5" />
			<echo message="${sha} *${archiveName}" file="${postingDirectory}/${buildLabel}/checksum/${archiveName}.sha1" />
		</parallel>
	</target>


</project>

