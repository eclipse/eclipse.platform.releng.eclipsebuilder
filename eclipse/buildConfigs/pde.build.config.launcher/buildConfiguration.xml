<project name="org.eclipse.pde.build.configuration" default="main" basedir=".">

	<target name="main">
		<property name="product" value="${basedir}/config.product" />
		<property name="id" value="org.eclipse.pde.build.container.feature" />
		<property name="type" value="feature" />
		<property name="verify" value="false" />
		<delete dir="${basedir}/temp" />

		<path id="launcher.paths">
			<fileset dir="${reposource}" includes="plugins/org.eclipse.equinox.launcher*" />
			<!-- the built version of the org.eclipse.equinox.executable feature -->
			<dirset dir="${buildDirectory}" includes="features/org.eclipse.equinox.executable*" />
		</path>

		<!-- generate a feature based on our .product file -->
		<property file="${eclipse.build.configs}/master/build.properties" />
		<ant antfile="${eclipse.pdebuild.scripts}/productBuild/productBuild.xml" target="generateFeature">
			<property name="nestedInclusions" value="false" />
			<property name="buildDirectory" value="${basedir}/temp" />
		</ant>
		<!-- generate product build scripts for the generated feature -->
		<ant antfile="${eclipse.pdebuild.scripts}/genericTargets.xml" target="generateScript">
			<property name="buildDirectory" value="${basedir}/temp" />
			<property name="baseLocation" value="" />
			<property name="transformedRepoLocation" value="" />
			<property name="pluginPath" refid="launcher.paths" />
			<property name="forceContextQualifier" value="${buildId}" />
		</ant>

		<property name="pde.build.config.launcher.temp" value="${equinox.build.configs}/pde.build.config.launcher/temp" />
		<mkdir dir="${pde.build.config.launcher.temp}" />

		<eclipse.brand.p2.artifacts metadataRepository="file:${reposource}" artifactRepository="file:${reposource}" tempDirectory="${pde.build.config.launcher.temp}" launcherProvider="org.eclipse.equinox.executable" productId="org.eclipse.pde.build.feature" launcherName="pdebuild" config="win32.win32.x86" productVersion="1.0.0.${buildId}" iconsList="${buildDirectory}/org.eclipse.equinox.executable/library/win32/eclipse.ico" />
		<eclipse.brand.p2.artifacts metadataRepository="file:${reposource}" artifactRepository="file:${reposource}" tempDirectory="${pde.build.config.launcher.temp}" launcherProvider="org.eclipse.equinox.executable" productId="org.eclipse.pde.build.feature" launcherName="pdebuild" config="win32.win32.x86_64" productVersion="1.0.0.${buildId}" iconsList="${buildDirectory}/org.eclipse.equinox.executable/library/win32/eclipse.ico" />
		<eclipse.brand.p2.artifacts metadataRepository="file:${reposource}" artifactRepository="file:${reposource}" tempDirectory="${pde.build.config.launcher.temp}" launcherProvider="org.eclipse.equinox.executable" productId="org.eclipse.pde.build.feature" launcherName="pdebuild" config="linux.gtk.x86" productVersion="1.0.0.${buildId}" iconsList="${buildDirectory}/org.eclipse.equinox.executable/library/win32/eclipse.ico"  />
		<eclipse.brand.p2.artifacts metadataRepository="file:${reposource}" artifactRepository="file:${reposource}" tempDirectory="${pde.build.config.launcher.temp}" launcherProvider="org.eclipse.equinox.executable" productId="org.eclipse.pde.build.feature" launcherName="pdebuild" config="linux.gtk.x86_64" productVersion="1.0.0.${buildId}" iconsList="${buildDirectory}/org.eclipse.equinox.executable/library/win32/eclipse.ico" />
		<eclipse.brand.p2.artifacts metadataRepository="file:${reposource}" artifactRepository="file:${reposource}" tempDirectory="${pde.build.config.launcher.temp}" launcherProvider="org.eclipse.equinox.executable" productId="org.eclipse.pde.build.feature" launcherName="pdebuild" config="macosx.cocoa.x86" productVersion="1.0.0.${buildId}" iconsList="${buildDirectory}/org.eclipse.equinox.executable/library/win32/eclipse.ico"  />
		<eclipse.brand.p2.artifacts metadataRepository="file:${reposource}" artifactRepository="file:${reposource}" tempDirectory="${pde.build.config.launcher.temp}" launcherProvider="org.eclipse.equinox.executable" productId="org.eclipse.pde.build.feature" launcherName="pdebuild" config="macosx.cocoa.x86_64" productVersion="1.0.0.${buildId}" iconsList="${buildDirectory}/org.eclipse.equinox.executable/library/win32/eclipse.ico"  />

		<!-- get the generate p2.inf that got generated with the above scripts -->
		<copy file="${basedir}/temp/features/org.eclipse.pde.build.container.feature/product/p2.inf" tofile="${basedir}/p2.inf" overwrite="true" />
		<replace file="${basedir}/p2.inf" token="@FLAVOR@" value="tooling" />

		<!-- publish the configuration feature with the generated p2.inf -->
		<replace file="${basedir}/feature.xml" token="@qualifier@" value="${buildId}" />
		<eclipse.gatherFeature metadataRepository="file:${reposource}" artifactRepository="file:${reposource}" buildResultFolder="${basedir}" baseDirectory="${basedir}" />
	</target>
</project>
