<project name="Build specific targets and properties" default="noDefault" basedir=".">

	<property name="postingDirectory" value="${buildDirectory}" />
	
	<!-- ===================================================================== -->
	<!-- Run a given ${target} on all elements being built -->
	<!-- ===================================================================== -->
	<target name="allElements">
		<ant antfile="${genericTargets}" target="${target}">
			<property name="type" value="feature" />
			<property name="id" value="org.eclipse.platform.sdk" />
		</ant>
	</target>

	<!-- ===================================================================== -->
	<!-- Targets to assemble the built elements for particular configurations  -->
	<!-- These generally call the generated assemble scripts (named in -->
	<!-- ${assembleScriptName}) but may also add pre and post processing -->
	<!-- Add one target for each root element and each configuration -->
	<!-- ===================================================================== -->

	<!-- POST STEPS TO ADD -->
	<target name="assemble.org.eclipse.platform.sdk.win32.win32.x86">
		<property name="archiveName" value="eclipse-platform-SDK-${buildId}-win32.zip" />
		<antcall target="assemble" />
	</target>
	
	<target name="assemble.org.eclipse.platform.sdk.win32.win32.x86_64">
			<property name="archiveName" value="eclipse-platform-SDK-${buildId}-win32-x86_64.zip" />
			<antcall target="assemble" />
		</target>

	<target name="assemble.org.eclipse.platform.sdk.win32.wpf.x86">
			<property name="archiveName" value="eclipse-platform-SDK-${buildId}-win32-wpf.zip" />
			<antcall target="assemble" />
		</target>
	
	<target name="assemble.org.eclipse.platform.sdk.linux.motif.x86">
		<property name="archiveName" value="eclipse-platform-SDK-${buildId}-linux-motif.tar.gz" />
		<antcall target="assemble" />
	</target>

	<target name="assemble.org.eclipse.platform.sdk.linux.gtk.x86">
		<property name="archiveName" value="eclipse-platform-SDK-${buildId}-linux-gtk.tar.gz" />
		<antcall target="assemble" />
	</target>

	<target name="assemble.org.eclipse.platform.sdk.linux.gtk.x86_64">
		<property name="archiveName" value="eclipse-platform-SDK-${buildId}-linux-gtk-x86_64.tar.gz" />
		<antcall target="assemble" />
	</target>
	
	<target name="assemble.org.eclipse.platform.sdk.linux.gtk.ia64"/>
	<target name="assemble.org.eclipse.platform.sdk.linux.gtk.ppc">
	<target name="assemble.org.eclipse.platform.sdk.solaris.motif.sparc"/>		
		
	<property name="archiveName" value="eclipse-platform-SDK-${buildId}-linux-gtk-ppc.tar.gz" />
		<antcall target="assemble" />
	</target>
	
	<target name="assemble.org.eclipse.platform.sdk.hpux.motif.ia64_32">
			<property name="archiveName" value="eclipse-platform-SDK-${buildId}-hpux-motif-ia64_32.zip" />
			<antcall target="assemble" />
	</target>
	
	<target name="assemble.org.eclipse.platform.sdk.solaris.gtk.sparc">
		<property name="archiveName" value="eclipse-platform-SDK-${buildId}-solaris-gtk.zip" />
		<antcall target="assemble" />
	</target>
	
	<target name="assemble.org.eclipse.platform.sdk.qnx.photon.x86" />

	<target name="assemble.org.eclipse.platform.sdk.aix.motif.ppc">
		<property name="archiveName" value="eclipse-platform-SDK-${buildId}-aix-motif.zip" />
		<antcall target="assemble" />
	</target>

	<target name="assemble.org.eclipse.platform.sdk.hpux.motif.PA_RISC"/>	

	<target name="assemble.org.eclipse.platform.sdk.macosx.carbon.ppc">
		<property name="archiveName" value="eclipse-platform-SDK-${buildId}-macosx-carbon.tar.gz" />
		<antcall target="assemble" />
	</target>

	<target name="assemble">
		<property name="archiveFullPath" value="${buildDirectory}/${buildLabel}/${archiveName}" />
		<ant antfile="${assembleScriptName}" />
	</target>
		<target name="postPackage">
			<mkdir dir="${buildDirectory}/${buildLabel}/checksum"/>
			<exec executable="sh" dir="${buildDirectory}/${buildLabel}">
				<arg line="${eclipse.build.configs}/../../extras/produceChecksum" />
			</exec>
			<move todir="${postingDirectory}/${buildLabel}">
				<fileset dir="${buildDirectory}/${buildLabel}" />
			</move>
		</target>

	<!-- ===================================================================== -->
	<!-- Check out map files from correct repository -->
	<!-- Replace values for cvsRoot, package and mapVersionTag as desired. -->
	<!-- ===================================================================== -->
	<target name="checkLocal">
		<available property="mapsLocal" file="${buildDirectory}/maps/org.eclipse.releng" />
	</target>
	<target name="getMapFiles" depends="checkLocal" unless="mapsLocal">

		<!-- ***  change the repo info -->
		<property name="mapCvsRoot" value=":pserver:anonymous@dev.eclipse.org:/home/eclipse" />
		<property name="mapVersionTag" value="HEAD" />
		<cvs cvsRoot="${mapCvsRoot}" package="org.eclipse.releng" dest="${buildDirectory}/maps" tag="${mapVersionTag}" />
		<!--tag the map files project-->
		<antcall target="tagMapFiles" />
		<antcall target="getPrebuiltElements" />
	</target>

	<target name="compareMapFiles" if="compareMaps">
		<property file="${mapTag.properties}"/>
		<property name="cvsDiffFile" value="${buildDirectory}/cvsDiff.txt" />
		<cvs cvsRoot="${mapCvsRoot}" dest="${buildDirectory}/maps" command="diff -w -r ${lastMapTag}" output="${cvsDiffFile}" />
		<modifiedMaps mapDiffFile="${cvsDiffFile}" />
	</target>

	<target name="tagMapFiles" if="tagMaps">
		<!-- Stores tag on the filesystem so map files can be compared -->
		<echo file="${mapTag.properties}">
		lastMapTag=${buildId}
	</echo>
		<cvs dest="${buildDirectory}/maps/org.eclipse.releng" command="tag ${buildId}" />
	</target>

	<target name="getPrebuiltElements">
		<generateBaseFetchScript
			mapfile="${buildDirectory}/maps/org.eclipse.releng/maps/base.map"
			outputfile="${buildDirectory}/fetchbase.xml"/>
		<ant antfile="${buildDirectory}/fetchbase.xml" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before setup -->
	<!-- ===================================================================== -->
	<target name="preSetup">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after setup but before starting the build proper -->
	<!-- ===================================================================== -->
	<target name="postSetup">
		<!--fetch the additional pieces to build swt gtk64-->
		<property name="featureOnly" value="false" />
		<property name="featureAndPlugins" value="true" />
		<property name="featuresRecursively" value="false" />
		<ant antfile="genericTargets.xml" dir="${eclipse.pdebuild.scripts}" target="fetchElement">
			<property name="type" value="fragment" />
			<property name="id" value="org.eclipse.swt.gtk.linux.x86_64" />
		</ant>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="preFetch">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the fetch -->
	<!-- ===================================================================== -->
	<target name="postFetch">
		<ant antfile="${genericTargets}" target="fetchElement">
			<property name="type" value="feature" />
			<property name="id" value="org.eclipse.equinox.executable" />
		</ant>
		<!--create launchersrc.zip and copy to org.eclipse.platform plugin (fix for bug #49237) -->
		<zip destfile="${buildDirectory}/plugins/org.eclipse.platform/launchersrc.zip" basedir="${buildDirectory}/features/org.eclipse.equinox.executable" includes="library/**" />

		<!--fetch and compile swt tools-->
		<ant antfile="genericTargets.xml" dir="${eclipse.pdebuild.scripts}" target="fetchElement">
			<property name="type" value="plugin" />
			<property name="id" value="org.eclipse.swt.tools" />
		</ant>
		<ant antfile="genericTargets.xml" dir="${eclipse.pdebuild.scripts}" target="generateScript">
			<property name="type" value="plugin" />
			<property name="id" value="org.eclipse.swt.tools" />
		</ant>
		<ant antfile="build.xml" dir="${buildDirectory}/plugins/org.eclipse.swt.win32.win32.x86" target="build.jars">
			<property name="type" value="plugin" />
			<property name="id" value="org.eclipse.swt.win32.win32.x86" />
		</ant>
		<ant antfile="build.xml" dir="${buildDirectory}/plugins/org.eclipse.swt.tools" target="build.jars">
			<property name="type" value="plugin" />
			<property name="id" value="org.eclipse.swt.tools" />
			<property name="baseos" value="win32" />
			<property name="basews" value="win32" />
			<property name="basearch" value="x86" />
		</ant>

	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before generating build scripts -->
	<!-- ===================================================================== -->
	<target name="preGenerate">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after generating the build scripts -->
	<!-- ===================================================================== -->
	<target name="postGenerate">
		<antcall target="clean" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before assembling -->
	<!-- ===================================================================== -->
	<target name="preAssemble">

	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after assembling-->
	<!-- ===================================================================== -->
	<target name="postAssemble">
	</target>



	<!-- ===================================================================== -->
	<!-- Steps to do before running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="preProcess">
		<replace dir="${buildDirectory}/plugins" value="${buildId}" token="@build@">
			<include name="**/about.mappings" />
		</replace>
		<replace dir="${buildDirectory}/features/org.eclipse.platform" value="${buildId}" token="@build@">
			<include name="**/config.ini" />
		</replace>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="postProcess">
		<condition property="logsAvailable">
			<istrue value="${javacVerbose}" />
		</condition>
		<antcall target="gatherLogs" />
	</target>

	<target name="prePackage" />

	<!-- ===================================================================== -->
	<!-- Steps to do after everything is built and assembled -->
	<!-- (e.g., testing, posting, emailing, ...) -->
	<!-- ===================================================================== -->
	<target name="postBuild">
	</target>

	<!-- ===================================================================== -->
	<!-- Helper targets -->
	<!-- ===================================================================== -->
	<target name="gatherLogs" if="logsAvailable">

		<mkdir dir="${postingDirectory}/${buildLabel}/compilelogs" />
		<antcall target="allElements">
			<param name="target" value="gatherLogs" />
		</antcall>

		<unzip dest="${postingDirectory}/${buildLabel}/compilelogs" overwrite="true">
			<fileset dir="${buildDirectory}/features/org.eclipse.platform.sdk">
				<include name="*.log.zip" />
			</fileset>
		</unzip>
	</target>
	<target name="clean" unless="noclean">
		<antcall target="allElements">
			<param name="target" value="cleanElement" />
		</antcall>
	</target>
	<!-- ===================================================================== -->
	<!-- Default target                                                        -->
	<!-- ===================================================================== -->
	<target name="noDefault">
		<echo message="You must specify a target when invoking this file" />
	</target>

</project>
