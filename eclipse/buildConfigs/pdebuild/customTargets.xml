<project name="Build specific targets and properties" default="noDefault" basedir=".">


	<property name="postingDirectory" value="${buildDirectory}" />
	<property name="archiveName" value="org.eclipse.pde.build.feature-${buildId}.zip" />
	<property name="archiveFullPath" value="${buildDirectory}/${buildLabel}/${archiveName}" />
	<property name="mapsRoot" value="${buildDirectory}/maps/org.eclipse.releng/maps" />

	<!-- ===================================================================== -->
	<!-- Run a given ${target} on all elements being built -->
	<!-- ===================================================================== -->
	<available property="allElementsFile" file="${builder}/allElements.xml" value="${builder}/allElements.xml" />
	<property name="allElementsFile" location="${eclipse.pdebuild.templates}/headless-build/allElements.xml" />

	<import file="${allElementsFile}" />
	<target name="allElements">
		<antcall target="allElementsDelegator" />
	</target>

	<!-- ===================================================================== -->
	<!-- Targets to assemble the built elements for particular configurations  -->
	<!-- These generally call the generated assemble scripts (named in -->
	<!-- ${assembleScriptName}) but may also add pre and post processing -->
	<!-- Add one target for each root element and each configuration -->
	<!-- ===================================================================== -->
	<target name="postPackage">
	</target>
	<!-- ===================================================================== -->
	<!-- Check out map files from correct repository -->
	<!-- Replace values for cvsRoot, package and mapVersionTag as desired. -->
	<!-- ===================================================================== -->
	<target name="checkLocal">
		<available property="mapsLocal" file="${buildDirectory}/maps/org.eclipse.releng" />
	</target>
	<target name="getMapFiles" depends="checkLocal" unless="mapsLocal">

		<property name="mapsGitRepo" value="${buildDirectory}/commonrepo" />
		<mkdir dir="${mapsGitRepo}" />
		<exec executable="git" dir="${mapsGitRepo}">
			<arg line="clone ${commonrepo}" />
		</exec>
		<exec executable="git" dir="${mapsGitRepo}/eclipse.platform.releng.maps">
			<arg line="checkout ${mapVersionTag}" />
		</exec>
		<mkdir dir="${buildDirectory}/maps" />
		<exec executable="git" dir="${buildDirectory}/maps" output="${buildDirectory}/maps/maps.tar">
			<arg line="archive --format=tar --remote=${mapsGitRepo}/eclipse.platform.releng.maps ${mapVersionTag} org.eclipse.releng/maps" />
		</exec>
		<untar src="${buildDirectory}/maps/maps.tar" dest="${buildDirectory}/maps" />
		<!--compare the map files project-->
		<antcall target="compareMapFiles" />
		<!--tag the map files project-->
		<antcall target="tagMapFiles" />
		<antcall target="getPrebuiltElements" />
	</target>

	<target name="compareMapFiles" if="compareMaps">
		<property file="${mapTag.properties}" />
		<property name="mapsPath" value="eclipse.platform.releng.maps/org.eclipse.releng/maps" />
		<property name="cvsDiffFile" value="${buildDirectory}/cvsDiff.txt" />
		<exec executable="git" dir="${mapsGitRepo}/${mapsPath}" output="${cvsDiffFile}">
			<arg line="diff ${lastMapTag} ${mapsGitRepo}/${mapsPath} ." />
		</exec>
		<modifiedMaps mapDiffFile="${cvsDiffFile}" />
	</target>

	<target name="tagMapFiles" if="tagMaps">
		<!-- Stores tag on the filesystem so map files can be compared -->
		<echo file="${mapTag.properties}">
	lastMapTag=${buildId}
</echo>
		<exec executable="git" dir="${mapsGitRepo}/eclipse.platform.releng.maps">
			<arg line="tag ${buildId}" />
		</exec>
		<exec executable="git" dir="${mapsGitRepo}/eclipse.platform.releng.maps">
			<arg line="push origin ${buildId}" />
		</exec>
	</target>

	<target name="getPrebuiltElements">
	</target>


	<!-- ===================================================================== -->
	<!-- Steps to do before setup -->
	<!-- ===================================================================== -->
	<target name="preSetup">
		<!-- for (PDE build + compiler adapter) https://bugs.eclipse.org/bugs/show_bug.cgi?id=330240 -->
		<loadproperties srcFile="${buildDirectory}/finalPluginsVersions.properties" />
		<property name="tempjdtcoredir" value="${buildDirectory}/" />
		<mkdir dir="${tempjdtcoredir}" />
		<unzip dest="${tempjdtcoredir}" overwrite="true">
			<fileset dir="${buildDirectory}/buildRepo">
				<include name="plugins/org.eclipse.jdt.core_${org.eclipse.jdt.core}.jar" />
			</fileset>
		</unzip>
		<eclipse.publish.featuresAndBundles repository="file:/${buildDirectory}/buildRepo">
			<bundles dir="${tempjdtcoredir}" includes="jdtCompilerAdapter.jar" />
		</eclipse.publish.featuresAndBundles>
		<property name="pdebaseLocationtemp" value="${buildDirectory}/pdebaseLocationtemp" />
		<delete dir="${pdebaseLocationtemp}" />
		<mkdir dir="${pdebaseLocationtemp}" />
		<p2.mirror source="file:/${buildDirectory}/buildRepo">
			<destination kind="metadata" location="file://${pdebaseLocationtemp}" name="name" format="file://${buildRepo}" />
			<destination kind="artifact" location="file://${pdebaseLocationtemp}" name="name" format="file://${buildRepo}" />
			<slicingOptions includeOptional="false" includeNonGreedy="false" followStrict="true" followOnlyFilteredRequirements="true" />
		</p2.mirror>
		<property name="pdebaseLocation" value="${buildDirectory}/pdebaseLocation" />
		<delete dir="${pdebaseLocation}" />
		<mkdir dir="${pdebaseLocation}" />
		<p2.repo2runnable destination="${pdebaseLocation}">
			<source dir="${buildDirectory}" includes="pdebaseLocationtemp" />
		</p2.repo2runnable>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after setup but before starting the build proper -->
	<!-- ===================================================================== -->
	<target name="postSetup">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="preFetch">
		<replace dir="${buildDirectory}/maps/org.eclipse.releng/maps" value="${localmirror}" token="download.eclipse.org" />
		<replace dir="${buildDirectory}/maps/org.eclipse.releng/maps" value="${cvsuser}" token=":pserver:anonymous" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="postFetch">

	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before generating build scripts -->
	<!-- ===================================================================== -->
	<target name="preGenerate">

	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after generating the build scripts -->
	<!-- ===================================================================== -->
	<target name="postGenerate">
		<antcall target="clean" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before assembling -->
	<!-- ===================================================================== -->
	<target name="preAssemble">

	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after assembling-->
	<!-- ===================================================================== -->
	<target name="postAssemble">
	</target>


	<!-- ===================================================================== -->
	<!-- Steps to do before running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="preProcess">
		<replace dir="${buildDirectory}/plugins" value="${buildId}" token="@build@">
			<include name="**/about.mappings" />
		</replace>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="postProcess">
		<condition property="logsAvailable">
			<istrue value="${javacVerbose}" />
		</condition>
		<antcall target="gatherLogs" />
	</target>

	<target name="prePackage" />

	<!-- ===================================================================== -->
	<!-- Steps to do after everything is built and assembled -->
	<!-- (e.g., testing, posting, emailing, ...) -->
	<!-- ===================================================================== -->
	<target name="postBuild">
	</target>

	<!-- ===================================================================== -->
	<!-- Helper targets -->
	<!-- ===================================================================== -->
	<target name="gatherLogs" if="logsAvailable">

		<mkdir dir="${postingDirectory}/${buildLabel}/compilelogs" />
		<antcall target="allElements">
			<param name="target" value="gatherLogs" />
		</antcall>

		<unzip dest="${postingDirectory}/${buildLabel}/compilelogs" overwrite="true">
			<fileset dir="${buildDirectory}/features/org.eclipse.pde.build.feature">
				<include name="*.log.zip" />
			</fileset>
		</unzip>
	</target>
	<target name="clean" unless="noclean">
		<antcall target="allElements">
			<param name="target" value="cleanElement" />
		</antcall>
	</target>
	<!-- ===================================================================== -->
	<!-- Default target                                                        -->
	<!-- ===================================================================== -->
	<target name="noDefault">
		<echo message="You must specify a target when invoking this file" />
	</target>

</project>
