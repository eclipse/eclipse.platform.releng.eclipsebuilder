<project default="noDefault">

	<target name="noDefault" />

	<!-- set the root of the output file name -->
	<property name="archiveRoot" value="eclipse-RCP-${buildId}" />

	<!-- Target to get the packaging map files for the components of interest
     The files must be fetched into the downloadDirectory folder -->
	<target name="getMapFiles" unless="mapsFetched">
		<copy file="${packagingInfo}/../../../../packaging.map" tofile="${downloadDirectory}/packaging.map" />
	</target>

	<target name="assemble.win32.win32.x86.xml">
		<antcall target="assembler">
			<param name="archiveName" value="${archiveRoot}-win32.zip" />
		</antcall>
	</target>

	<target name="assemble.win32.win32.x86_64.xml">
		<antcall target="assembler">
			<param name="archiveName" value="${archiveRoot}-win32-x86_64.zip" />
		</antcall>
	</target>

	<target name="assemble.win32.wpf.x86.xml">
		<antcall target="assembler">
			<param name="archiveName" value="${archiveRoot}-win32-wpf.zip" />
		</antcall>
	</target>

	<target name="assemble.linux.gtk.x86.xml">
		<antcall target="assembler">
			<param name="archiveName" value="${archiveRoot}-linux-gtk.tar.gz" />
		</antcall>
	</target>

	<target name="assemble.linux.gtk.x86_64.xml">
		<antcall target="assembler">
			<param name="archiveName" value="${archiveRoot}-linux-gtk-x86_64.tar.gz" />
		</antcall>
	</target>

	<target name="assemble.linux.gtk.ppc.xml">
		<antcall target="assembler">
			<param name="archiveName" value="${archiveRoot}-linux-gtk-ppc.tar.gz" />
		</antcall>
	</target>

	<target name="assemble.hpux.motif.ia64_32.xml">
		<antcall target="assembler">
			<param name="archiveName" value="${archiveRoot}-hpux-motif-ia64_32.zip" />
		</antcall>
	</target>

	<target name="assemble.solaris.gtk.sparc.xml">
		<antcall target="assembler">
			<param name="archiveName" value="${archiveRoot}-solaris-gtk.zip" />
		</antcall>
	</target>

	<target name="assemble.solaris.motif.sparc.xml">
		<antcall target="assembler">
			<param name="archiveName" value="${archiveRoot}-solaris-motif.zip" />
		</antcall>
	</target>

	<target name="assemble.aix.motif.ppc.xml">
		<antcall target="assembler">
			<param name="archiveName" value="${archiveRoot}-aix-motif.zip" />
		</antcall>
	</target>

	<target name="assemble.macosx.carbon.ppc.xml">
		<antcall target="assembler">
			<param name="archiveName" value="${archiveRoot}-macosx-carbon.tar.gz" />
		</antcall>
	</target>
	
	<target name="assemble.macosx.carbon.x86.xml">
		<antcall target="assembler">
			<param name="archiveName" value="${archiveRoot}-macosx-carbon.x86.tar.gz" />
		</antcall>
	</target>

	<target name="assembler">
		<mkdir dir="${postingDirectory}/${buildLabel}/checksum" />
		<property name="archiveFullPath" value="${postingDirectory}/${buildLabel}/${archiveName}" />
		<ant antfile="${assembleScriptName}" />
		<condition property="hpuxperm">
			<equals arg1="${archiveName}" arg2="${archiveRoot}-hpux-motif-ia64_32.zip" />
		</condition>
		<antcall target="fixhpux" />
		<checksum file="${archiveFullPath}" property="md5" />
		<checksum file="${archiveFullPath}" algorithm="SHA" property="sha" />
		<echo message="${md5} *${archiveName}" file="${postingDirectory}/${buildLabel}/checksum/${archiveName}.md5" />
		<echo message="${sha} *${archiveName}" file="${postingDirectory}/${buildLabel}/checksum/${archiveName}.sha1" />
	</target>

	<target name="fixhpux" if="hpuxperm">
		<property name="hpuxtemp" value="${buildDirectory}/hpuxtemp" />
		<delete dir="${hpuxtemp}" />
		<mkdir dir="${hpuxtemp}" />
		<unzip src="${archiveFullPath}" dest="${hpuxtemp}">
			<patternset>
				<include name="eclipse/plugins/org.eclipse.equinox.launcher.motif.hpux.ia64_32_*/*.so" />
			</patternset>
		</unzip>
		<chmod dir="${hpuxtemp}" perm="755" includes="**/*.so" />
		<exec executable="zip" dir="${hpuxtemp}">
			<arg line="-r ${postingDirectory}/${buildLabel}/${archiveName} *" />
		</exec>
	</target>


</project>
