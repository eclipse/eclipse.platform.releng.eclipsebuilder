###############################################################################
# Copyright (c) 2004, 2006 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#target to call in test.xml:  runtests-local | runtests-remote
testTarget=runtests-hudson

platform=linux-gtk_6.0

#directory on test machine where automated testing framework will be installed
testDir=${testDir}

#name of zip file containing automated testing framework and JUnit test plug-ins
testFramework=${testDir}/eclipse-Automated-Tests-${buildId}.zip

#name of runtime to install and test
runtime=eclipse-SDK-${buildId}-linux-gtk.tar.gz

#name of deltaPack to install and test
runtimeDeltapack=eclipse-${buildId}-delta-pack.zip

#name of Platform runtime to install and test
runtimePlatform=eclipse-platform-${buildId}-linux-gtk.tar.gz

# Not currently used on eclipse.org tests
previousRuntimePlatform=eclipse-platform-3.7.1-linux-gtk.tar.gz

#directory where test scripts are launched
executionDir=${testDir}/eclipse-testing

# currently this variable is "hard coded" to work on Hudson. 
# TODO: make more sensitive to env. setttings in future so can 
# support tests on non Ecipse Infrastructure
# If this property is defined, and file exists, the Eclipse infrastructure 
# will copy these "preferences" to 
# ${executionDirectory}/test-eclipse/eclipse/configuration/.settings/
# after the test instance of eclipse is installed
org.eclipse.core.net.prefs=${WORKSPACE}/eclipse.platform.releng.eclipsebuilder/eclipse/buildConfigs/sdk.tests/testConfigs/org.eclipse.core.net.prefs

#name of file that captures console output from running JUnit plug-in tests
consolelog=linux-6.0_consolelog.txt

testExecutable=bash

#name of script to execute on remote machine
#testScript=start /min /wait ${executionDir}\\testAll.bat
testScript=./testAll.sh

#arguments to $(testScript)
args=