<project default="main">

    <target name="init" 
            depends="streamSpecificInit">
        
        <!--	
        <property name="buildId" value="N20110317-1137" />
		<property name="currentbuildrepo" value="https://hudson.eclipse.org/hudson/view/Eclipse%20and%20Equinox/job/eclipse-equinox-test-N/lastSuccessfulBuild/artifact/builds/transfer/files/repo/N20110317-1137"/> 
		-->
        <echo message="Beginning init of runtests.xml" />
        <echo message="buildId ${buildId}" />
        <echo message="WORKSPACE ${WORKSPACE}" />
        <echo message="BUILD_ID ${BUILD_ID}" />
        <echo message="BUILD_NUMBER ${BUILD_NUMBER}" />
        <condition
            property="testDir"
            value="${WORKSPACE}\workarea\${BUILD_ID}">
            <os family="windows" />
        </condition>
        <property
            name="testDir"
            value="${WORKSPACE}/workarea/${BUILD_ID}" />
        <echo message="testDir ${testDir}" />
        <condition
            property="executionDir"
            value="${testDir}\eclipse-testing">
            <os family="windows" />
        </condition>
        <property
            name="executionDir"
            value="${testDir}/eclipse-testing" />
        <mkdir dir="${executionDir}" />
        <echo message="executionDir ${executionDir}" />
        <echo message="hudson ${hudson}" />
        <echo message="BUILD_JOB_NAME ${BUILD_NUMBER}" />
        <echo message="BUILD_BUILD_NUMBER ${BUILD_BUILD_NUMBER}" />
        <property
            name="buildURL"
            value="https://hudson.eclipse.org/hudson/job/${BUILD_JOB_NAME}/${BUILD_BUILD_NUMBER}/artifact/builds/transfer/files/master/downloads/drops/${buildId}" />
        <echo message="buildURL ${buildURL}" />
    </target>

    <target name="getwinzips">
        <get
            src="${buildURL}/eclipse-SDK-${buildId}-win32.zip"
            dest="${executionDir}/eclipse-SDK-${buildId}-win32.zip" />
        <get
            src="${buildURL}/eclipse-Automated-Tests-${buildId}.zip"
            dest="${testDir}/eclipse-Automated-Tests-${buildId}.zip" />
        <get
            src="${buildURL}/eclipse-platform-${buildId}-win32.zip"
            dest="${executionDir}/eclipse-platform-${buildId}-win32.zip" />
        <get
            src="${buildURL}/eclipse-${buildId}-delta-pack.zip"
            dest="${executionDir}/eclipse-${buildId}-delta-pack.zip" />
        <get
            src="${buildURL}/eclipse-Automated-Tests-${buildId}.zip"
            dest="${executionDir}/eclipse-Automated-Tests-${buildId}.zip" />
        <get
            src="http://download.eclipse.org/eclipse/downloads/drops/R-3.7.1-201109091335/eclipse-platform-3.7.1-win32.zip"
            dest="${executionDir}/eclipse-platform-3.7.1-win32.zip" />
    </target> 

	<!-- <target name="getwinzips">
		<get src="http://download.eclipse.org/eclipse/downloads/drops/I20110315-0800/eclipse-SDK-${buildId}-win32.zip" dest="${executionDir}/eclipse-SDK-${buildId}-win32.zip" />
		<get src="http://download.eclipse.org/eclipse/downloads/drops/I20110315-0800/eclipse-Automated-Tests-${buildId}.zip" dest="${testDir}/eclipse-Automated-Tests-${buildId}.zip" />
		<get src="http://download.eclipse.org/eclipse/downloads/drops/I20110315-0800/eclipse-platform-${buildId}-win32.zip" dest="${executionDir}/eclipse-platform-${buildId}-win32.zip" />
		<get src="http://download.eclipse.org/eclipse/downloads/drops/I20110315-0800/eclipse-${buildId}-delta-pack.zip" dest="${executionDir}/eclipse-${buildId}-delta-pack.zip" />
		<get src="http://download.eclipse.org/eclipse/downloads/drops/I20110315-0800/eclipse-Automated-Tests-${buildId}.zip" dest="${executionDir}/eclipse-Automated-Tests-${buildId}.zip" />
		<get src="http://download.eclipse.org/eclipse/downloads/drops/R-3.7.1-201109091335/eclipse-platform-3.7.1-win32.zip" dest="${executionDir}/eclipse-platform-3.7.1-win32.zip" />
	</target> -->

    <target name="getlinzips">
        <get
            src="${buildURL}/eclipse-SDK-${buildId}-linux-gtk.tar.gz"
            dest="${executionDir}/eclipse-SDK-${buildId}-linux-gtk.tar.gz" />
        <get
            src="${buildURL}/eclipse-Automated-Tests-${buildId}.zip"
            dest="${testDir}/eclipse-Automated-Tests-${buildId}.zip" />
        <get
            src="${buildURL}/eclipse-platform-${buildId}-linux-gtk.tar.gz"
            dest="${executionDir}/eclipse-platform-${buildId}-linux-gtk.tar.gz" />
        <get
            src="${buildURL}/eclipse-${buildId}-delta-pack.zip"
            dest="${executionDir}/eclipse-${buildId}-delta-pack.zip" />
        <get
            src="${buildURL}/eclipse-Automated-Tests-${buildId}.zip"
            dest="${executionDir}/eclipse-Automated-Tests-${buildId}.zip" />
        <get
            src="http://download.eclipse.org/eclipse/downloads/drops/R-3.7.1-201109091335/eclipse-platform-3.7.1-linux-gtk.tar.gz"
            dest="${executionDir}/eclipse-platform-3.7.1-linux-gtk.tar.gz" />
    </target>

    <target name="getmaczips">
        <get
            src="${buildURL}/eclipse-SDK-${buildId}-macosx-cocoa.tar.gz"
            dest="${executionDir}/eclipse-SDK-${buildId}-macosx-cocoa.tar.gz" />
        <get
            src="${buildURL}/eclipse-Automated-Tests-${buildId}.zip"
            dest="${testDir}/eclipse-Automated-Tests-${buildId}.zip" />
        <get
            src="${buildURL}/eclipse-platform-${buildId}-macosx-cocoa.tar.gz"
            dest="${executionDir}/eclipse-platform-${buildId}-macosx-cocoa.tar.gz" />
        <get
            src="${buildURL}/eclipse-${buildId}-delta-pack.zip"
            dest="${executionDir}/eclipse-${buildId}-delta-pack.zip" />
        <get
            src="${buildURL}/eclipse-Automated-Tests-${buildId}.zip"
            dest="${executionDir}/eclipse-Automated-Tests-${buildId}.zip" />
        <get
            src="http://download.eclipse.org/eclipse/downloads/drops/R-3.7.1-201109091335/eclipse-platform-3.7.1-macosx-cocoa.tar.gz"
            dest="${executionDir}/eclipse-platform-3.7.1-macosx-cocoa.tar.gz" />
    </target>

  <!-- <target name="getmaczips">
		<get src="http://download.eclipse.org/eclipse/downloads/drops/I20110315-0800/eclipse-SDK-I20110315-0800-macosx-cocoa.tar.gz" dest="${executionDir}/eclipse-SDK-I20110315-0800-macosx-cocoa.tar.gz" />
		<get src="http://download.eclipse.org/eclipse/downloads/drops/I20110315-0800/eclipse-Automated-Tests-I20110315-0800.zip" dest="${testDir}/eclipse-Automated-Tests-I20110315-0800.zip" />
		<get src="http://download.eclipse.org/eclipse/downloads/drops/I20110315-0800/eclipse-platform-I20110315-0800-macosx-cocoa.tar.gz" dest="${executionDir}/eclipse-platform-I20110315-0800-macosx-cocoa.tar.gz" />
		<get src="http://download.eclipse.org/eclipse/downloads/drops/I20110315-0800/eclipse-I20110315-0800-delta-pack.zip" dest="${executionDir}/eclipse-I20110315-0800-delta-pack.zip" />
		<get src="http://download.eclipse.org/eclipse/downloads/drops/I20110315-0800/eclipse-Automated-Tests-I20110315-0800.zip" dest="${executionDir}/eclipse-Automated-Tests-I20110315-0800.zip" />
		<get src="http://download.eclipse.org/eclipse/downloads/drops/R-3.7.1-201109091335/eclipse-platform-3.7.1-macosx-cocoa.tar.gz" dest="${executionDir}/eclipse-platform-3.7.1-macosx-cocoa.tar.gz" />
	</target> --> 

	<!-- <target name="getmaczips">
		<get src="https://hudson.eclipse.org/hudson/job/eclipse-equinox-test-N/lastSuccessfulBuild/artifact/builds/transfer/files/master/downloads/drops/N20110317-1137/eclipse-SDK-N20110317-1137-macosx-cocoa.tar.gz" dest="${executionDir}/eclipse-SDK-N20110317-1137-macosx-cocoa.tar.gz" />
		<get src="https://hudson.eclipse.org/hudson/job/eclipse-equinox-test-N/lastSuccessfulBuild/artifact/builds/transfer/files/master/downloads/drops/N20110317-1137/eclipse-Automated-Tests-N20110317-1137.zip" dest="${testDir}/eclipse-Automated-Tests-N20110317-1137.zip" />
		<get src="https://hudson.eclipse.org/hudson/job/eclipse-equinox-test-N/lastSuccessfulBuild/artifact/builds/transfer/files/master/downloads/drops/N20110317-1137/eclipse-platform-N20110317-1137-macosx-cocoa.tar.gz" dest="${executionDir}/eclipse-platform-N20110317-1137-macosx-cocoa.tar.gz" />
		<get src="https://hudson.eclipse.org/hudson/job/eclipse-equinox-test-N/lastSuccessfulBuild/artifact/builds/transfer/files/master/downloads/drops/N20110317-1137/eclipse-N20110317-1137-delta-pack.zip" dest="${executionDir}/eclipse-N20110317-1137-0800-delta-pack.zip" />
		<get src="https://hudson.eclipse.org/hudson/job/eclipse-equinox-test-N/lastSuccessfulBuild/artifact/builds/transfer/files/master/downloads/drops/N20110317-1137/eclipse-Automated-Tests-N20110317-1137.zip" dest="${executionDir}/eclipse-Automated-Tests-N20110317-1137.zip" />
		<get src="http://download.eclipse.org/eclipse/downloads/drops/R-3.7.1-201109091335/eclipse-platform-3.7.1-macosx-cocoa.tar.gz" dest="${executionDir}/eclipse-platform-3.7.1-macosx-cocoa.tar.gz" />
	</target> -->

    <target name="configure.team.cvs.test">
        <condition
            property="cvstest.properties"
            value="/shared/eclipse/buildtests/cvstest.properties">
            <and>
                <os family="unix" />
                <not>
                    <os family="mac" />
                </not>
            </and>
        </condition>
        <condition
            property="cvstest.properties"
            value="c:\users\hudsonbuild\cvstest.properties">
            <os family="windows" />
        </condition>
        <condition
            property="cvstest.properties"
            value="/Users/hudsonbuild/cvstest.properties">
            <os family="mac" />
        </condition>
        <echo message="cvstest.properties ${cvstest.properties}" />
        <replace
            file="${executionDir}/test.xml"
            propertyFile="${cvstest.properties}">
            <replacefilter
                token="${cvs_user}"
                property="cvs_user" />
            <replacefilter
                token="${cvs_password}"
                property="cvs_password" />
            <replacefilter
                token="${cvs_host}"
                property="cvs_host" />
            <replacefilter
                token="${cvs_root}"
                property="cvs_root" />
        </replace>
    </target>

    <target
        name="main"
        depends="init">
        <property
            name="test.xml"
            value="../org.eclipse.releng.basebuilder/plugins/org.eclipse.build.tools/scripts/test.xml" />
        <condition
            property="testPlatform"
            value="win7">
            <and>
                <equals
                    arg1="${osgi.os}"
                    arg2="win32" />
                <equals
                    arg1="${osgi.ws}"
                    arg2="win32" />
                <equals
                    arg1="${osgi.arch}"
                    arg2="x86" />
            </and>
        </condition>
        <echo message="os ws arch ${osgi.os} ${osgi.ws} ${osgi.arch}" />
        <condition
            property="testPlatform"
            value="linux">
            <and>
                <equals
                    arg1="${osgi.os}"
                    arg2="linux" />
                <equals
                    arg1="${osgi.ws}"
                    arg2="gtk" />
                <or>
                    <equals
                        arg1="${osgi.arch}"
                        arg2="x86_64" />
                    <equals
                        arg1="${osgi.arch}"
                        arg2="x86" />
                </or>
            </and>
        </condition>
        <condition
            property="testPlatform"
            value="macmini">
            <and>
                <equals
                    arg1="${osgi.os}"
                    arg2="macosx" />
                <equals
                    arg1="${osgi.ws}"
                    arg2="cocoa" />
                <equals
                    arg1="${osgi.arch}"
                    arg2="x86" />
            </and>
        </condition>
        <echo message="testPlatform  ${testPlatform}" />
        <condition
            property="getArtifacts"
            value="getwinzips">
            <equals
                arg1="${testPlatform}"
                arg2="win7" />
        </condition>
        <condition
            property="getArtifacts"
            value="getlinzips">
            <equals
                arg1="${testPlatform}"
                arg2="linux" />
        </condition>
        <condition
            property="getArtifacts"
            value="getmaczips">
            <equals
                arg1="${testPlatform}"
                arg2="macmini" />
        </condition>
        <echo message="getArtifacts ${getArtifacts}" />
        <antcall target="${getArtifacts}" />
        <property file="eclipse/buildConfigs/sdk.tests/testConfigs/${testPlatform}/testing.properties" />
        <property
            name="tester"
            value="${executionDir}" />

		<!--if executiondir starts with c:\ you'll need to escape it so it can load the filename properly with java -->
        <pathconvert
            targetos="unix"
            property="windowsfile">
            <path location="${executionDir}" />
        </pathconvert>
        <echo message="windowsfile ${windowsfile}" />
        <property
            name="p2executionDir"
            value="${windowsfile}" />
        <replace
            file="eclipse/buildConfigs/sdk.tests/testConfigs/${testPlatform}/equinoxp2tests.properties"
            token="@executionDir@"
            value="${p2executionDir}" />
        <replace
            file="eclipse/buildConfigs/sdk.tests/testConfigs/${testPlatform}/equinoxp2tests.properties"
            token="@buildId@"
            value="${buildId}" />
        <replace
            file="eclipse/buildConfigs/sdk.tests/testConfigs/${testPlatform}/equinoxp2tests.properties"
            token="@org.eclipse.equinox.p2.tests.current.build.repo@"
            value="${currentbuildrepo}" />
        <property file="eclipse/buildConfigs/sdk.tests/testConfigs/${testPlatform}/equinoxp2tests.properties" />

        <echo message="executionDir ${executionDir}" />

        <copy todir="${executionDir}">
            <fileset dir="eclipse/buildConfigs/sdk.tests/testConfigs/${testPlatform}" />
        </copy>
        <copy
            todir="${executionDir}"
            overwrite="true">
            <fileset dir="eclipse/buildConfigs/sdk.tests/testScripts" />
        </copy>
        <antcall target="configure.team.cvs.test" />
        <ant antfile="${test.xml}" />
    </target>
    
    <!-- 
         This target was copied from buildAll.xml and does about exactly the same thing, 
         purposely left close to original, though not as much is as required.
         
         Its purpose, here, is entirely to pick up "stream specific" stings from the releng maps 
         project, 'configuration' folder. 
         
         Important note: here, unlike the one in buildAll.xml, we assume the maps have already 
         been checked out, say by hudson, as a peer of eclipseBuilder, rather then us doing
         the checkout here, ourselves. Not sure which is easier, but current means hudson job 
         has to be set up with two git checkout steps, right version for maps (for 3.8 vs 4.2).
         
     -->

    <target
        name="streamSpecificInit"
        unless="streamSpecificInitComplete">
        <echo message="DEBUG: executing streamSpecificInit" />


        <!-- mapsProject is the "top" of the maps project after it has been 
            checked out to the local working area (buildDirectory). TODO: its actually 
            hard coded is scores of places as "${buildDirectory}/maps/org.eclipse.releng" 
            but closest existing variable I could find what 'mapsRoot' which is ${buildDirectory}/maps/org.eclipse.releng/maps 
            so that (and others) should eventually be refactored to something like mapsRoot 
            = ${mapsProject}/maps" -->
        <property
            name="mapsProject"
            value="${buildDirectory}/maps/org.eclipse.releng" />
        <property
            name="configurationLocation"
            value="${mapsProject}/configuration" />

        <!-- TODO: I moved (copied) this from init, probably only needs to 
            be set once, but, needs to be set before loading the repo properties -->
        <!--set local mirror location depending if hudson is running -->
        <condition
            property="localmirror"
            value="download.eclipse.org">
            <equals
                arg1="${hudson}"
                arg2="true" />
        </condition>


        <!-- bug 376217: repos.properties is one of the files moved from 
            eclispebuild to maps project and into a common file, streamSpecific-build.properties -->
        <replace
            token="@localmirror@"
            file="${configurationLocation}/streamSpecific-build.properties"
            value="${localmirror}" />
        <!-- The reading/loading of the these streamSpecific-build.properties 
            is critical to several stream specific areas of code, so may have to be moved 
            "earlier"? Made it own task for depends on clauses? -->
        <loadproperties srcFile="${configurationLocation}/streamSpecific-build.properties" />

        <!-- now that we have maps (and we already have eclipseBuider from 
            masterBuild.sh, before calling buildAll.xml, then now its time to "overlay" 
            the stream specific files of eclipseBuild that are in the maps project, in 
            the folder named /org.eclipse.releng/configuration/eclipseBuilderOverlays -->
        <!-- TODO: semi hard code for now, figure out variables later maybe 
            do away with "supportDir" segment? maybe call 'base' and other variables 
            'eclipsebulder.base'? -->
        <property
            name="localbuilderDir"
            value="${base}/supportDir" />
        <copy
            verbose="true"
            failonerror="true"
            todir="${localbuilderDir}/org.eclipse.releng.eclipsebuilder"
            overwrite="true">
            <fileset dir="${localbuilderDir}/src/maps/org.eclipse.releng/configuration/eclipseBuilderOverlays/">
                <include name="**" />
            </fileset>
        </copy>

        <!-- now that we've done that little merge, let's "fix up" eclipseBuild 
            stuff that depends on exact version numbers -->
        <replace
            summary="true"
            dir="${localbuilderDir}/org.eclipse.releng.eclipsebuilder"
            token="@eclipseStream@"
            value="${eclipseStream}" />
        <replace
            summary="true"
            dir="${localbuilderDir}/org.eclipse.releng.eclipsebuilder"
            token="@eclipseStreamMajor@"
            value="${eclipseStreamMajor}" />
        <replace
            summary="true"
            dir="${localbuilderDir}/org.eclipse.releng.eclipsebuilder"
            token="@eclipseStreamMinor@"
            value="${eclipseStreamMinor}" />
        <!-- seems unlikely we'd ever need this all by itself, and not just 
            use eclipseStream, which should be all three fields <replace summary="true" 
            dir="${localbuilderDir}/org.eclipse.releng.eclipsebuilder" token="@eclipseStreamService@" 
            value="${eclipseStreamService}" /> -->

        <!-- no need to re-init the properties, once done (in this scope) 
            so no one else can ever set streamSpecificInitComplete properties. It is 
            our control property -->
        <property
            name="streamSpecificInitComplete"
            value="true" />
    </target>
</project>
