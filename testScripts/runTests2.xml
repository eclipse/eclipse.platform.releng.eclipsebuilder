<project default="main">

    <target
        name="hudson-init"
        if="hudson">
        <!-- as of this writing, 04/22/2012, this was current list of 
             hudson provided variables. We take advantage of a number 
             of them, but "translate" them into our own variable names, 
             for a little loser build-system seperattion 
        BUILD_NUMBER
            The current build number, such as "153"
        BUILD_ID
            The current build id, such as "2005-08-22_23-59-59" (YYYY-MM-DD_hh-mm-ss)
        JOB_NAME
            Name of the project of this build, such as "foo"
        BUILD_TAG
            String of "hudson-${JOB_NAME}-${BUILD_NUMBER}". Convenient to put into a resource file, a jar file, etc for easier identification.
        EXECUTOR_NUMBER
            The unique number that identifies the current executor (among executors of the same machine) that's carrying out this build. This is the number you see in the "build executor status", except that the number starts from 0, not 1.
        NODE_NAME
            Name of the slave if the build is on a slave, or "" if run on master
        NODE_LABELS
            Whitespace-separated list of labels that the node is assigned.
        JAVA_HOME
            If your job is configured to use a specific JDK, this variable is set to the JAVA_HOME of the specified JDK. When this variable is set, PATH is also updated to have $JAVA_HOME/bin.
        WORKSPACE
            The absolute path of the workspace.
        HUDSON_URL
            Full URL of Hudson, like http://server:port/hudson/
        BUILD_URL
            Full URL of this build, like http://server:port/hudson/job/foo/15/
        JOB_URL
            Full URL of this job, like http://server:port/hudson/job/foo/
        SVN_REVISION
            For Subversion-based projects, this variable contains the revision number of the module.
        CVS_BRANCH
            For CVS-based projects, this variable contains the branch of the module. If CVS is configured to check out the trunk, this environment variable will not be set.
        HUDSON_USER
            Currently logged in user
            -->
        <property environment="hudson" />
        <property
            name="WORKSPACE"
            value="${hudson.WORKSPACE}" />
        <property
            name="BUILD_ID"
            value="${hudson.BUILD_ID}" />
        <property
            name="BUILD_NUMBER"
            value="${hudson.BUILD_NUMBER}" />
        <property
            name="JOB_NAME"
            value="${hudson.JOB_NAME}" />



    </target>
    <target
        name="init"
        depends="hudson-init">
        <echo message="hudson: ${hudson}" />
        <echo message="WORKSPACE: ${WORKSPACE}" />
        <echo message="BUILD_ID: ${BUILD_ID}" />
        <echo message="BUILD_NUMBER: ${BUILD_NUMBER}" />
        <echo message="JOB_NAME: ${JOB_NAME}" />
        <echo message="buildId: ${buildId}" />
		
        
		<!-- <condition property="testDir" value="${hudson.WORKSPACE}\ws\${hudson.BUILD_ID}">
			<os family="windows" />
		</condition> -->
        <condition
            property="testDir"
            value="${WORKSPACE}\ws">
            <os family="windows" />
        </condition>
        <property
            name="testDir"
            value="${WORKSPACE}/ws/${BUILD_ID}" />
        <echo message="testDir ${testDir}" />
        <condition
            property="executionDir"
            value="${testDir}\eclipse-testing">
            <os family="windows" />
        </condition>
        <property
            name="executionDir"
            value="${testDir}/eclipse-testing" />
        <mkdir dir="${executionDir}" />
        <echo message="executionDir ${executionDir}" />

        <!-- what's intended difference for currentbuildrepo and buildURL? -->
        <!-- TODO: vary to drops for 3.8 -->
        <property
            name="currentbuildrepo"
            value="http://download.eclipse.org/eclipse/updates/4.2-N-builds" />
        <echo message="currentbuildrepo: ${currentbuildrepo}" />

        <!-- TODO: vary to drops for 3.8 -->
        <property
            name="buildURL"
            value="http://download.eclipse.org/eclipse/downloads/drops4/${buildId}" />
        <echo message="buildURL ${buildURL}" />
    </target>

    <target name="getwinzips">
        <get
            src="${buildURL}/eclipse-SDK-${buildId}-win32.zip"
            dest="${executionDir}/eclipse-SDK-${buildId}-win32.zip" />
        <get
            src="${buildURL}/eclipse-Automated-Tests-${buildId}.zip"
            dest="${testDir}/eclipse-Automated-Tests-${buildId}.zip" />
        <get
            src="${buildURL}/eclipse-platform-${buildId}-win32.zip"
            dest="${executionDir}/eclipse-platform-${buildId}-win32.zip" />
        <get
            src="${buildURL}/eclipse-${buildId}-delta-pack.zip"
            dest="${executionDir}/eclipse-${buildId}-delta-pack.zip" />
        <get
            src="${buildURL}/eclipse-Automated-Tests-${buildId}.zip"
            dest="${executionDir}/eclipse-Automated-Tests-${buildId}.zip" />
        <get
            src="http://download.eclipse.org/eclipse/downloads/drops/R-3.7.1-201109091335/eclipse-platform-3.7.1-win32.zip"
            dest="${executionDir}/eclipse-platform-3.7.1-win32.zip" />
    </target>

    <target name="getlinzips">
        <get
            src="${buildURL}/eclipse-SDK-${buildId}-linux-gtk-x86_64.tar.gz"
            dest="${executionDir}/eclipse-SDK-${buildId}-linux-gtk-x86_64.tar.gz" />
        <get
            src="${buildURL}/eclipse-Automated-Tests-${buildId}.zip"
            dest="${testDir}/eclipse-Automated-Tests-${buildId}.zip" />
        <get
            src="${buildURL}/eclipse-platform-${buildId}-linux-gtk-x86_64.tar.gz"
            dest="${executionDir}/eclipse-platform-${buildId}-linux-gtk-x86_64.tar.gz" />
        <get
            src="${buildURL}/eclipse-${buildId}-delta-pack.zip"
            dest="${executionDir}/eclipse-${buildId}-delta-pack.zip" />
        <get
            src="${buildURL}/eclipse-Automated-Tests-${buildId}.zip"
            dest="${executionDir}/eclipse-Automated-Tests-${buildId}.zip" />
        <get
            src="http://download.eclipse.org/eclipse/downloads/drops/R-3.7.1-201109091335/eclipse-platform-3.7.1-linux-gtk-x86_64.tar.gz"
            dest="${executionDir}/eclipse-platform-3.7.1-linux-gtk-x86_64.tar.gz" />
    </target>

    <target name="getmaczips">
        <get
            src="${buildURL}/eclipse-SDK-${buildId}-macosx-cocoa.tar.gz"
            dest="${executionDir}/eclipse-SDK-${buildId}-macosx-cocoa.tar.gz" />
        <get
            src="${buildURL}/eclipse-Automated-Tests-${buildId}.zip"
            dest="${testDir}/eclipse-Automated-Tests-${buildId}.zip" />
        <get
            src="${buildURL}/eclipse-platform-${buildId}-macosx-cocoa.tar.gz"
            dest="${executionDir}/eclipse-platform-${buildId}-macosx-cocoa.tar.gz" />
        <get
            src="${buildURL}/eclipse-${buildId}-delta-pack.zip"
            dest="${executionDir}/eclipse-${buildId}-delta-pack.zip" />
        <get
            src="${buildURL}/eclipse-Automated-Tests-${buildId}.zip"
            dest="${executionDir}/eclipse-Automated-Tests-${buildId}.zip" />
        <get
            src="http://download.eclipse.org/eclipse/downloads/drops/R-3.7.1-201109091335/eclipse-platform-3.7.1-macosx-cocoa.tar.gz"
            dest="${executionDir}/eclipse-platform-3.7.1-macosx-cocoa.tar.gz" />
    </target>

    <target name="configure.team.cvs.test">
        <condition
            property="cvstest.properties"
            value="/shared/eclipse/buildtests/cvstest.properties">
            <and>
                <os family="unix" />
                <not>
                    <os family="mac" />
                </not>
            </and>
        </condition>
        <condition
            property="cvstest.properties"
            value="c:\users\hudsonbuild\cvstest.properties">
            <os family="windows" />
        </condition>
        <condition
            property="cvstest.properties"
            value="/Users/hudsonbuild/cvstest.properties">
            <os family="mac" />
        </condition>
        <echo message="cvstest.properties ${cvstest.properties}" />
        <replace
            file="${executionDir}/test.xml"
            propertyFile="${cvstest.properties}">
            <replacefilter
                token="${cvs_user}"
                property="cvs_user" />
            <replacefilter
                token="${cvs_password}"
                property="cvs_password" />
            <replacefilter
                token="${cvs_host}"
                property="cvs_host" />
            <replacefilter
                token="${cvs_root}"
                property="cvs_root" />
        </replace>
    </target>

    <target
        name="main"
        depends="init">
        <property
            name="test.xml"
            value="../org.eclipse.releng.basebuilder/plugins/org.eclipse.build.tools/scripts/test.xml" />
        <condition
            property="testPlatform"
            value="win7">
            <and>
                <equals
                    arg1="${osgi.os}"
                    arg2="win32" />
                <equals
                    arg1="${osgi.ws}"
                    arg2="win32" />
                <equals
                    arg1="${osgi.arch}"
                    arg2="x86" />
            </and>
        </condition>
        <echo message="os ws arch ${osgi.os} ${osgi.ws} ${osgi.arch}" />
        <condition
            property="testPlatform"
            value="linux">
            <and>
                <equals
                    arg1="${osgi.os}"
                    arg2="linux" />
                <equals
                    arg1="${osgi.ws}"
                    arg2="gtk" />
                <or>
                    <equals
                        arg1="${osgi.arch}"
                        arg2="x86_64" />
                    <equals
                        arg1="${osgi.arch}"
                        arg2="x86" />
                </or>
            </and>
        </condition>
        <condition
            property="testPlatform"
            value="macmini">
            <and>
                <equals
                    arg1="${osgi.os}"
                    arg2="macosx" />
                <equals
                    arg1="${osgi.ws}"
                    arg2="cocoa" />
                <equals
                    arg1="${osgi.arch}"
                    arg2="x86" />
            </and>
        </condition>
        <echo message="testPlatform  ${testPlatform}" />
        <condition
            property="getArtifacts"
            value="getwinzips">
            <equals
                arg1="${testPlatform}"
                arg2="win7" />
        </condition>
        <condition
            property="getArtifacts"
            value="getlinzips">
            <equals
                arg1="${testPlatform}"
                arg2="linux" />
        </condition>
        <condition
            property="getArtifacts"
            value="getmaczips">
            <equals
                arg1="${testPlatform}"
                arg2="macmini" />
        </condition>
        <echo message="getArtifacts ${getArtifacts}" />
        <antcall target="${getArtifacts}" />
        <property file="eclipse/buildConfigs/sdk.tests/testConfigs/${testPlatform}/testing.properties" />
        <property
            name="tester"
            value="${executionDir}" />

		<!--if executiondir starts with c:\ you'll need to escape it so it can load the filename properly with java -->
        <pathconvert
            targetos="unix"
            property="windowsfile">
            <path location="${executionDir}" />
        </pathconvert>
        <echo message="windowsfile ${windowsfile}" />
        <property
            name="p2executionDir"
            value="${windowsfile}" />
        <replace
            file="eclipse/buildConfigs/sdk.tests/testConfigs/${testPlatform}/equinoxp2tests.properties"
            token="@executionDir@"
            value="${p2executionDir}" />
        <replace
            file="eclipse/buildConfigs/sdk.tests/testConfigs/${testPlatform}/equinoxp2tests.properties"
            token="@buildId@"
            value="${buildId}" />
        <replace
            file="eclipse/buildConfigs/sdk.tests/testConfigs/${testPlatform}/equinoxp2tests.properties"
            token="@org.eclipse.equinox.p2.tests.current.build.repo@"
            value="${currentbuildrepo}" />
        <property file="eclipse/buildConfigs/sdk.tests/testConfigs/${testPlatform}/equinoxp2tests.properties" />

        <echo message="executionDir ${executionDir}" />

        <copy todir="${executionDir}">
            <fileset dir="eclipse/buildConfigs/sdk.tests/testConfigs/${testPlatform}" />
        </copy>
        <copy
            todir="${executionDir}"
            overwrite="true">
            <fileset dir="eclipse/buildConfigs/sdk.tests/testScripts" />
        </copy>
        <antcall target="configure.team.cvs.test" />
        <ant antfile="${test.xml}" />
    </target>

</project>
